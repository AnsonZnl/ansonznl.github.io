"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[247],{9476:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-6295d704",path:"/computer-base/%E7%AE%97%E6%B3%95.html",title:"算法",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"排序算法",slug:"排序算法",children:[{level:3,title:"冒泡排序",slug:"冒泡排序",children:[]},{level:3,title:"选择排序",slug:"选择排序",children:[]},{level:3,title:"插入排序",slug:"插入排序",children:[]},{level:3,title:"归并排序",slug:"归并排序",children:[]},{level:3,title:"快速排序",slug:"快速排序",children:[]}]},{level:2,title:"搜索算法",slug:"搜索算法",children:[{level:3,title:"顺序搜索",slug:"顺序搜索",children:[]},{level:3,title:"二分搜索",slug:"二分搜索",children:[]}]},{level:2,title:"补充知识",slug:"补充知识",children:[{level:3,title:"递归",slug:"递归",children:[]},{level:3,title:"动态规划",slug:"动态规划",children:[]},{level:3,title:"贪心算法",slug:"贪心算法",children:[]},{level:3,title:"大 O 表示法",slug:"大-o-表示法",children:[]}]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"computer-base/算法.md",git:{}}},2658:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Cn});var t=a(6252),e=a(1425),o=a(4423),l=a(8008),c=a(5054),p=a(4273),u=a(6020);const k=(0,t._)("h1",{id:"算法",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#算法","aria-hidden":"true"},"#"),(0,t.Uk)(" 算法")],-1),_=(0,t._)("h2",{id:"排序算法",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#排序算法","aria-hidden":"true"},"#"),(0,t.Uk)(" 排序算法")],-1),r=(0,t._)("h3",{id:"冒泡排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#冒泡排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 冒泡排序")],-1),i=(0,t._)("blockquote",null,[(0,t._)("p",null,[(0,t.Uk)("冒泡排序是排序算法中最简单的，然后从运行角度来看，它却是最差的一个。"),(0,t._)("br"),(0,t.Uk)(" 冒泡排序的原理很简单，就是比较任何两个相邻的项，如果第一个比第二个大，则交换他们。元素项向上移动至正确的顺序，就好像气泡上升到表面一样，冒泡排序因此得名。")])],-1),U=(0,t._)("p",null,[(0,t._)("strong",null,"步骤")],-1),b=(0,t._)("ul",null,[(0,t._)("li",null,"比较相邻的元素，如果第一个如第二个大，就交换他们两个。"),(0,t._)("li",null,"对每一组相邻元素作同样的工作，从开始第一对到结尾的最后一对，这步做完，最后的元素会是最大的数。"),(0,t._)("li",null,"针对所有的元素重复以上步骤，直到没有任何一对数字需要比较。")],-1),m=(0,t._)("p",null,[(0,t._)("strong",null,"JS 实现")],-1),d=(0,t._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t._)("pre",{class:"language-javascript"},[(0,t._)("code",null,[(0,t._)("span",{class:"token comment"},"// 第一种"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" arr "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"sort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" len "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("length"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" len"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"+"),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" len"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token keyword"},"if"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},">"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" result "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"sort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("result"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token comment"},"// [ 1, 2, 3, 4, 5 ]"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 第二种"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"bubleSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" len "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("length"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" outer "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" len"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" outer "),(0,t._)("span",{class:"token operator"},">="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" outer"),(0,t._)("span",{class:"token operator"},"--"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" inner "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" inner "),(0,t._)("span",{class:"token operator"},"<="),(0,t.Uk)(" outer "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" inner"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("inner"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},">"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("inner "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("inner"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("inner "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("inner "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("inner"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" arr "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"78"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token function"},"bubleSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// [1, 2, 4, 4, 4, 5, 5, 78]"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br")])],-1),h=(0,t._)("p",null,[(0,t._)("img",{src:e,alt:"冒泡排序动画演示"})],-1),g=(0,t._)("h3",{id:"选择排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#选择排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 选择排序")],-1),f=(0,t._)("blockquote",null,[(0,t._)("p",null,"选择排序是一种原址比较排序算法，选择排序大致的思路就是找到数据结构中最小的值并将其放在第一次，然后找到第二小的值，将其放在第二位...以此类推")],-1),w=(0,t._)("p",null,[(0,t._)("strong",null,"步骤")],-1),y=(0,t._)("ul",null,[(0,t._)("li",null,"找到最小的值，和第一个元素交换。"),(0,t._)("li",null,"知道第二小的值，和第二个元素交换"),(0,t._)("li",null,"以此类推..")],-1),v=(0,t._)("p",null,[(0,t._)("img",{src:o,alt:"选择排序动画演示"})],-1),x=(0,t._)("h3",{id:"插入排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#插入排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 插入排序")],-1),j=(0,t._)("blockquote",null,[(0,t._)("p",null,"插入排序的原理如下。第一个元素默认是已排序元素，取出下一个元素和当前元素比较，如果当前元素大就交换位置。那么此时第一个元素就是当前的最小数，所以下次取出操作从第三个元素开始，向前对比，重复之前的操作。")],-1),S=(0,t._)("p",null,[(0,t._)("strong",null,"步骤")],-1),q=(0,t._)("ul",null,[(0,t._)("li",null,"将第一待排序序列的第一个元素看做一个有序序列，把第二个元素到最后一个元素当成是末排序列。"),(0,t._)("li",null,"从头到尾一次扫描未排序序列，将扫描的每个元素插入有序序列的适当位置。")],-1),A=(0,t._)("p",null,[(0,t._)("strong",null,"JS 实现")],-1),E=(0,t._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t._)("pre",{class:"language-javascript"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"insertSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" len "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("length"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" len"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" i"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},">"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j"),(0,t._)("span",{class:"token operator"},"--"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"break"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" arr "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"78"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token function"},"insertSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// [1, 2, 4, 4, 4, 5, 5, 78]"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br")])],-1),C=(0,t._)("p",null,[(0,t._)("img",{src:l,alt:"插入排序动画演示"})],-1),F=(0,t._)("h3",{id:"归并排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#归并排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 归并排序")],-1),O=(0,t._)("blockquote",null,[(0,t._)("p",null,"归并排序是一种分而治之算法，其思想是将原数组切割分为较小的数组，知道买个小数组只有一个位置，接着讲小数组归并为大的数组，知道最后只有一个排序完毕的大数组。")],-1),I=(0,t._)("p",null,[(0,t._)("strong",null,"步骤")],-1),L=(0,t._)("ul",null,[(0,t._)("li",null,"将原始数组分割为多个的只有一个项的小数组"),(0,t._)("li",null,"然后将小数组排序"),(0,t._)("li",null,"最后将已排好的小数组归并为一个大数组")],-1),B=(0,t._)("p",null,[(0,t._)("img",{src:c,alt:"归并排序动画演示"})],-1),J=(0,t._)("h3",{id:"快速排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#快速排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 快速排序")],-1),P=(0,t._)("blockquote",null,[(0,t._)("p",null,"快排的原理如下。随机选取一个数组中的值作为基准值，从左至右取值与基准值对比大小。比基准值小的放数组左边，大的放右边，对比完成后将基准值和第一个比基准值大的值交换位置。然后将数组以基准值的位置分为两部分，继续递归以上操作。")],-1),W=(0,t._)("p",null,[(0,t._)("strong",null,"步骤")],-1),z=(0,t._)("ul",null,[(0,t._)("li",null,"首先，从数组中选择中间一项作为基准值。"),(0,t._)("li",null,[(0,t.Uk)("创建两个指针，左边一个指向数组的第一项，右边一个指向数组的最后一项。 "),(0,t._)("ul",null,[(0,t._)("li",null,"移动左指针直到找到一个比基准值大的元素"),(0,t._)("li",null,"移动右指针直到找到一个比基准值小的元素"),(0,t._)("li",null,"然后交换他们"),(0,t._)("li",null,"重复这个过程，直到左指针超过右指针。")])]),(0,t._)("li",null,"这个过程将使得比基准值小的值都排在基准值之前，而比基准值大的值都排在基准值后面，直至数组排序完全。")],-1),D=(0,t._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t._)("pre",{class:"language-javascript"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("length "),(0,t._)("span",{class:"token operator"},"<="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 边界"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" left "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" right "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" current "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"splice"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("length"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" current"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      left"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"push"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 放在左边"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      right"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"push"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 放在右边"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("left"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"concat"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("current"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("right"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 递归"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" arr "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"78"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token function"},"quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// [1, 2, 4, 4, 4, 5, 5, 78]"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br")])],-1),K=(0,t._)("p",null,[(0,t._)("img",{src:p,alt:"快速排序动画演示"})],-1),M=(0,t._)("h2",{id:"搜索算法",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#搜索算法","aria-hidden":"true"},"#"),(0,t.Uk)(" 搜索算法")],-1),R=(0,t._)("h3",{id:"顺序搜索",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#顺序搜索","aria-hidden":"true"},"#"),(0,t.Uk)(" 顺序搜索")],-1),V=(0,t._)("blockquote",null,[(0,t._)("p",null,"顺序或线性搜索是最基本的搜索算法，它的机制是，将每一个数据结构中的元素和我们要找的元素做比较，顺序搜索是一种抵消的算法。")],-1),Z=(0,t._)("p",null,[(0,t._)("strong",null,"步骤")],-1),H=(0,t._)("ul",null,[(0,t._)("li",null,"遍历这个呢个数组，并将每个元素和搜索项比较"),(0,t._)("li",null,"如果搜索到就返回 true 或索引，搜素不到返回 false 或-1，")],-1),X=(0,t._)("h3",{id:"二分搜索",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#二分搜索","aria-hidden":"true"},"#"),(0,t.Uk)(" 二分搜索")],-1),Y=(0,t._)("blockquote",null,[(0,t._)("p",null,"二分搜索采用分而治之的方法，这个算法要求被搜索的数据结构已排序，然后将数据一分为二。直到找到该值为止。")],-1),G=(0,t._)("p",null,[(0,t._)("strong",null,"步骤")],-1),N=(0,t._)("ul",null,[(0,t._)("li",null,"选择选中值的中间值"),(0,t._)("li",null,"如果选择的值是待搜索值，那么算法执行结束（找到了）"),(0,t._)("li",null,"如果待搜索的值比选中值要小，则返回步骤 1 并在选中值左边的子数组中寻找"),(0,t._)("li",null,"如果待搜索的值比选中值要大，则返回步骤 1 并在选中值右边的子数组中寻找。")],-1),Q=(0,t._)("p",null,[(0,t._)("img",{src:"https://i.loli.net/2021/04/29/krBaEOFLDPqwnpo.png",alt:"二分.png"})],-1),T=(0,t._)("p",null,[(0,t._)("strong",null,"JS 实现 | 循环版本")],-1),$=(0,t._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t._)("pre",{class:"language-javascript"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"binarySeachFindIndex"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},[(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" target")]),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" low "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" high "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("length "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" mid "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"null"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"while"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("low "),(0,t._)("span",{class:"token operator"},"<="),(0,t.Uk)(" high"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    mid "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" Math"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"floor"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("low "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(" high"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"/"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("target "),(0,t._)("span",{class:"token operator"},"==="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("mid"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" mid"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("target "),(0,t._)("span",{class:"token operator"},">"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("mid"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      low "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" mid "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 猜大了 +1"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      high "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" mid "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 猜小了 -1"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"-"),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 没找到 返回 -1"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" result "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"binarySeachFindIndex"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("result"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 4"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br")])],-1),nn=(0,t._)("p",null,[(0,t._)("strong",null,"JS 实现 | 循环版本")],-1),sn=(0,t._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t._)("pre",{class:"language-javascript"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"binarySeachFindIndex"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},[(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" target"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" low "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" high "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("length "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1")]),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" mid "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" Math"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"floor"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("low "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(" high"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"/"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" cur "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("mid"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("cur "),(0,t._)("span",{class:"token operator"},"==="),(0,t.Uk)(" target"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" mid"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("cur "),(0,t._)("span",{class:"token operator"},">"),(0,t.Uk)(" target"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"binarySeachFindIndex"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" target"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" low"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" mid "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("cur "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" target"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"binarySeachFindIndex"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" target"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" mid "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" high"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"-"),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" result "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"binarySeachFindIndex"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("result"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 4"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br")])],-1),an=(0,t._)("h2",{id:"补充知识",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#补充知识","aria-hidden":"true"},"#"),(0,t.Uk)(" 补充知识")],-1),tn=(0,t._)("h3",{id:"递归",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#递归","aria-hidden":"true"},"#"),(0,t.Uk)(" 递归")],-1),en=(0,t._)("blockquote",null,[(0,t._)("p",null,"能够调用自身的方法或函数就是递归函数,每个递归函数都必须有一个边界条件，即一个不再递归的条件（停止点），以防止无限递归，无限递归会导致栈溢出（stack overflow error）。")],-1),on=(0,t._)("ul",null,[(0,t._)("li",null,"自己调用自己函数"),(0,t._)("li",null,[(0,t.Uk)("存在一个边界条件 "),(0,t._)("strong",null,"JS 数组扁平化")])],-1),ln=(0,t._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,t._)("pre",{class:"language-javascript"},[(0,t._)("code",null,[(0,t._)("span",{class:"token class-name"},"Array"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("prototype"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function-variable function"},"flat"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"function"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" arr "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"this"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"forEach"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},[(0,t.Uk)("item"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" index")]),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("Array"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"isArray"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("item"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      arr "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"concat"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("item"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"flat"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"//是数组 连接数组+继续递归"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"push"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("item"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 非数组，push"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 递归出口"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" arr "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"7"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"8"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"9"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"11"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"12"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"13"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"14"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"15"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"16"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"17"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"18"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"19"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"20"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"flat"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"//  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br")])],-1),cn=(0,t._)("h4",{id:"斐波那契数列",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#斐波那契数列","aria-hidden":"true"},"#"),(0,t.Uk)(" 斐波那契数列")],-1),pn=(0,t._)("p",null,[(0,t._)("strong",null,"定义")],-1),un=(0,t._)("ul",null,[(0,t._)("li",null,"1 和 2 的斐波那契数是 1"),(0,t._)("li",null,"n(n > 2) 的斐波那契数是(n + 1)的斐波那契数加上(n - 2)的斐波那契数"),(0,t._)("li",null,[(0,t.Uk)("参考"),(0,t._)("a",{href:"LeetCode/%E7%88%AC%E6%A5%BC%E6%A2%AF"},"爬楼梯")])],-1),kn=(0,t._)("h3",{id:"动态规划",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#动态规划","aria-hidden":"true"},"#"),(0,t.Uk)(" 动态规划")],-1),_n=(0,t._)("blockquote",null,[(0,t._)("p",null,"动态规划，是一种将复杂问题分解成更小问题来解决的优化技术。")],-1),rn=(0,t.Uk)("参考"),Un=(0,t.Uk)("最大子序和"),bn=(0,t._)("h3",{id:"贪心算法",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#贪心算法","aria-hidden":"true"},"#"),(0,t.Uk)(" 贪心算法")],-1),mn=(0,t._)("blockquote",null,[(0,t._)("p",null,"贪心算法遵循一种近似解决问题的技术，期盼通过每个阶段的局部最优选择，从而达到全局的最优。")],-1),dn=(0,t._)("h3",{id:"大-o-表示法",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#大-o-表示法","aria-hidden":"true"},"#"),(0,t.Uk)(" 大 O 表示法")],-1),hn=(0,t._)("blockquote",null,[(0,t._)("p",null,"即时间复杂度，通常使用最差的时间复杂度来衡量一个算法的好坏，即 CUP 运行一个算法所需的时间。")],-1),gn=(0,t._)("ul",null,[(0,t._)("li",null,"O(1)：只运行一次"),(0,t._)("li",null,"O(log(n))： 运行 n 的对数次"),(0,t._)("li",null,"O(n)：运行 n 次，n 是(输入)数组的大小"),(0,t._)("li",null,"O(n^2)：运行 n^2，输入值的平方")],-1),fn=(0,t._)("p",null,[(0,t._)("img",{src:u,alt:"OIP"})],-1),wn=(0,t._)("h2",{id:"参考",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),(0,t.Uk)(" 参考")],-1),yn={href:"https://github.com/AnsonZnl/LeetCodeAnimation",target:"_blank",rel:"noopener noreferrer"},vn=(0,t.Uk)("用动画的形式呈现解 LeetCode 题目的思路"),xn={href:"https://mp.weixin.qq.com/s/vn3KiV-ez79FmbZ36SX9lg",target:"_blank",rel:"noopener noreferrer"},jn=(0,t.Uk)("十大经典排序算法动画与解析，看我就够了！（配代码完全版）"),Sn={href:"https://visualgo.net/zh/sorting",target:"_blank",rel:"noopener noreferrer"},qn=(0,t.Uk)("用动画学算法"),An={href:"https://www.bilibili.com/video/BV1ME411C7iz?p=47",target:"_blank",rel:"noopener noreferrer"},En=(0,t.Uk)("KKB-数据结构和算法"),Cn={render:function(n,s){const a=(0,t.up)("RouterLink"),e=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[k,_,r,i,U,b,m,d,h,g,f,w,y,v,x,j,S,q,A,E,C,F,O,I,L,B,J,P,W,z,D,K,M,R,V,Z,H,X,Y,G,N,Q,T,$,nn,sn,an,tn,en,on,ln,cn,pn,un,kn,_n,(0,t._)("ul",null,[(0,t._)("li",null,[rn,(0,t.Wm)(a,{to:"/computer-base/LeetCode/%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C.html"},{default:(0,t.w5)((()=>[Un])),_:1})])]),bn,mn,dn,hn,gn,fn,wn,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",yn,[vn,(0,t.Wm)(e)])]),(0,t._)("li",null,[(0,t._)("a",xn,[jn,(0,t.Wm)(e)])]),(0,t._)("li",null,[(0,t._)("a",Sn,[qn,(0,t.Wm)(e)])]),(0,t._)("li",null,[(0,t._)("a",An,[En,(0,t.Wm)(e)])])])],64)}}},6020:(n,s,a)=>{n.exports=a.p+"assets/img/OIP.3a372144.jpg"},1425:(n,s,a)=>{n.exports=a.p+"assets/img/bubble.e1dd7f2a.gif"},8008:(n,s,a)=>{n.exports=a.p+"assets/img/insertion.341f7245.gif"},5054:(n,s,a)=>{n.exports=a.p+"assets/img/merge.e716b538.gif"},4273:(n,s,a)=>{n.exports=a.p+"assets/img/quick.c0e16207.gif"},4423:(n,s,a)=>{n.exports=a.p+"assets/img/selection.bd3eeef0.gif"}}]);