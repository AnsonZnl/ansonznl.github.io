"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[178],{1608:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-cbb10636",path:"/articles/CSS/",title:"CSS 布局",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"盒模型",slug:"盒模型",children:[{level:3,title:"组成",slug:"组成",children:[]},{level:3,title:"两种盒模型",slug:"两种盒模型",children:[]},{level:3,title:"切换盒模型",slug:"切换盒模型",children:[]}]},{level:2,title:"什么是 BFC？如何形成的？特点是什么？有哪些应用场景？",slug:"什么是-bfc-如何形成的-特点是什么-有哪些应用场景",children:[{level:3,title:"什么是 BFC",slug:"什么是-bfc",children:[]},{level:3,title:"如何形成的",slug:"如何形成的",children:[]},{level:3,title:"BFC 特点",slug:"bfc-特点",children:[]},{level:3,title:"应用场景",slug:"应用场景",children:[]}]},{level:2,title:"常见布局",slug:"常见布局",children:[{level:3,title:"圣杯",slug:"圣杯",children:[]},{level:3,title:"双飞翼",slug:"双飞翼",children:[]}]},{level:2,title:"居中布局",slug:"居中布局",children:[{level:3,title:"水平居中",slug:"水平居中",children:[]},{level:3,title:"垂直居中",slug:"垂直居中",children:[]},{level:3,title:"水平垂直居中(空间居中)",slug:"水平垂直居中-空间居中",children:[]}]},{level:2,title:"文字超出显示省略号",slug:"文字超出显示省略号",children:[{level:3,title:"单行",slug:"单行",children:[]},{level:3,title:"多行",slug:"多行",children:[]}]},{level:2,title:"Flex 布局",slug:"flex-布局",children:[{level:3,title:"容器的属性",slug:"容器的属性",children:[]},{level:3,title:"项目的属性",slug:"项目的属性",children:[]}]},{level:2,title:"Grid 布局",slug:"grid-布局",children:[]},{level:2,title:"rem 布局原理",slug:"rem-布局原理",children:[]},{level:2,title:"大屏适配方案（Scale）",slug:"大屏适配方案-scale",children:[]},{level:2,title:"CSS 画形状",slug:"css-画形状",children:[]},{level:2,title:"伪类",slug:"伪类",children:[{level:3,title:"用户行为类",slug:"用户行为类",children:[]},{level:3,title:"元素选择类",slug:"元素选择类",children:[]}]},{level:2,title:"伪元素",slug:"伪元素",children:[]},{level:2,title:"最佳实践",slug:"最佳实践",children:[]}],filePathRelative:"articles/CSS/README.md",git:{}}},1921:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Z});var t=a(6252);const e=(0,t.uE)('<h1 id="css-布局" tabindex="-1"><a class="header-anchor" href="#css-布局" aria-hidden="true">#</a> CSS 布局</h1><h2 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h2><h3 id="组成" tabindex="-1"><a class="header-anchor" href="#组成" aria-hidden="true">#</a> 组成</h3><p>盒模型主要包含四部分：</p><ul><li>margin</li><li>border</li><li>padding</li><li>content</li></ul><h3 id="两种盒模型" tabindex="-1"><a class="header-anchor" href="#两种盒模型" aria-hidden="true">#</a> 两种盒模型</h3><ul><li>W3C 标准盒模型：context = width</li><li>IE 盒模型：border + padding = width</li></ul><h3 id="切换盒模型" tabindex="-1"><a class="header-anchor" href="#切换盒模型" aria-hidden="true">#</a> 切换盒模型</h3><ul><li>box-sizing: content-box; # W3C 盒模型</li><li>box-sizing: border-box; # IE 盒模型</li></ul><h2 id="什么是-bfc-如何形成的-特点是什么-有哪些应用场景" tabindex="-1"><a class="header-anchor" href="#什么是-bfc-如何形成的-特点是什么-有哪些应用场景" aria-hidden="true">#</a> 什么是 BFC？如何形成的？特点是什么？有哪些应用场景？</h2><h3 id="什么是-bfc" tabindex="-1"><a class="header-anchor" href="#什么是-bfc" aria-hidden="true">#</a> 什么是 BFC</h3><ul><li>Box：Box 是 CSS 布局的对象和基本单位，你可以理解一个页面就是由很多的 Box 组成的</li><li>Formatting Context：即格式化上下文，它是存在页面中的一块独立的渲染区域。</li><li>BFC：全称是 Box formatting Context 翻译过来就是“块级格式化范围”。它是存在于页面中的一块独立渲染的区域，有一套单独的渲染规则。这里的元素不会在布局上影响到外面的元素（比如浮动/定位的元素等等）。 <strong>通俗一点讲，可以把 BFC 理解为一个封闭的大箱子，箱子内部的元素无论怎样翻江倒海，都不会影响到外部。</strong></li></ul><h3 id="如何形成的" tabindex="-1"><a class="header-anchor" href="#如何形成的" aria-hidden="true">#</a> 如何形成的</h3><ul><li>根元素（<code>&lt;body&gt;</code>）</li><li>浮动元素（float 的值不为 none）</li><li>绝对定位元素（元素的 position 为 absolute 或 fixed）</li><li>行内块元素（元素的 display 是 inline-block）</li><li>表格单元格（元素的 display 为 table-cell，HTML 表格单元格默认为该值）</li><li>表格标题（元素的 display 为 table-caption，HTML 表格标题默认为该值）</li><li>匿名表格单元格元素（元素的 display 为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是 HTML table、row、tbody、thead、tfoot 的默认属性）或 inline-table）</li><li>overflow 值不为 visible 的块元素 -弹性元素（display 为 flex 或 inline-flex 元素的直接子元素）</li><li>网格元素（display 为 grid 或 inline-grid 元素的直接子元素） 等等。</li></ul><h3 id="bfc-特点" tabindex="-1"><a class="header-anchor" href="#bfc-特点" aria-hidden="true">#</a> BFC 特点</h3><ul><li>BFC 垂直方向边距(margin)重叠</li><li>BFC 是一个独立的容器，外面的元素不会影响到里面的元素</li><li>BFC 的区域与会与浮动元素的 box 重叠</li><li>计算 BFC 高度的时候浮动元素也会参与计算</li></ul><h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h3><ul><li>防止浮动后导致的父元素高度塌陷</li></ul><p>也就是清楚浮动，就是将父元素变为一个 BFC 就可以解决。如设置：overflow:hidden;</p><ul><li>避免外边距折叠</li></ul><p>两个块同在一个 BFC 会造成垂直方向的外边距折叠，但如果对这两个块分别设置 BFC，那么边距重叠的问题就不存在了。</p><ul><li>不和浮动元素重叠</li></ul><p>在一个 BFC 中使用两个 BFC 可以做两列布局时使用</p><h2 id="常见布局" tabindex="-1"><a class="header-anchor" href="#常见布局" aria-hidden="true">#</a> 常见布局</h2><h3 id="圣杯" tabindex="-1"><a class="header-anchor" href="#圣杯" aria-hidden="true">#</a> 圣杯</h3><h3 id="双飞翼" tabindex="-1"><a class="header-anchor" href="#双飞翼" aria-hidden="true">#</a> 双飞翼</h3><h2 id="居中布局" tabindex="-1"><a class="header-anchor" href="#居中布局" aria-hidden="true">#</a> 居中布局</h2><h3 id="水平居中" tabindex="-1"><a class="header-anchor" href="#水平居中" aria-hidden="true">#</a> 水平居中</h3><ul><li>行内元素：<code>text-align:center;</code></li><li>块级元素：<code>margin:0 auto;</code></li><li>绝对定位和移动：<code>absolute + transform</code></li><li>绝对定位和负边距：<code>absolute + margin</code></li><li>flex: <code>flex + justify-content:center;</code></li></ul><h3 id="垂直居中" tabindex="-1"><a class="header-anchor" href="#垂直居中" aria-hidden="true">#</a> 垂直居中</h3><ul><li>子元素为单行文本：<code>line-height:height;</code></li><li>绝对定位： <code>absolute + transform</code></li><li>flex: <code>flex + align-item:center;</code></li><li>table：<code>display:table-cell;vertical-align:middle;</code></li><li>利用 position 和 top 和负的 margin</li></ul><h3 id="水平垂直居中-空间居中" tabindex="-1"><a class="header-anchor" href="#水平垂直居中-空间居中" aria-hidden="true">#</a> 水平垂直居中(空间居中)</h3><ul><li>grid：<code>display: grid; place-items: center;</code></li><li>flex: <code>display: flex; margin: auto;(子元素)</code></li></ul><h2 id="文字超出显示省略号" tabindex="-1"><a class="header-anchor" href="#文字超出显示省略号" aria-hidden="true">#</a> 文字超出显示省略号</h2><h3 id="单行" tabindex="-1"><a class="header-anchor" href="#单行" aria-hidden="true">#</a> 单行</h3><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">&lt;style&gt;\np</span><span class="token punctuation">{</span>\n  <span class="token comment">/* 控制显示文字的长度 */</span>\n  <span class="token property">max-width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n  <span class="token comment">/*禁止换行显示*/</span>\n  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #ffe51a<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n&lt;style&gt;\n\n&lt;body&gt;\n    &lt;p&gt;哈哈哈哈哈哈哈，哈哈哈哈哈，哈哈哈哈哈哈哈&lt;/p&gt;\n&lt;/body&gt;\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="多行" tabindex="-1"><a class="header-anchor" href="#多行" aria-hidden="true">#</a> 多行</h3><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">&lt;style&gt;\np</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span>\n    <span class="token property">text-overflow</span><span class="token punctuation">:</span>ellipsis<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span>-webkit-box<span class="token punctuation">;</span>\n    <span class="token comment">/*控制在3行*/</span>\n    <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span>3<span class="token punctuation">;</span>\n    <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span>vertical<span class="token punctuation">;</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span>#ffe51a<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n&lt;style&gt;\n\n&lt;body&gt;\n    &lt;p&gt;哈哈哈哈哈哈哈，哈哈哈哈哈，哈哈哈哈哈哈哈&lt;/p&gt;\n&lt;/body&gt;\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="flex-布局" tabindex="-1"><a class="header-anchor" href="#flex-布局" aria-hidden="true">#</a> Flex 布局</h2><p>Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。</p><p>使用<code>display: flex;</code>属性（行内使用<code>display:inline-flex;</code>），可以将一个元素指定为 Flex 布局</p><p>采用 Flex 布局的元素，称为“容器”，他的所有子元素为容器成员，称为“项目”</p><p>容器中默认存在两条轴：</p><ul><li>水平的主轴</li><li>垂直的交叉轴</li></ul>',44),p=(0,t.Uk)("推荐："),l={href:"http://bigerfe.com/yflex",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("Flex 可视化编程"),c=(0,t.uE)('<h3 id="容器的属性" tabindex="-1"><a class="header-anchor" href="#容器的属性" aria-hidden="true">#</a> 容器的属性</h3><ul><li><strong>flex-direction</strong></li></ul><p><code>flex-direction</code> 属性决定主轴的方向（即项目的排列方向）。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>row</td><td>默认值，主轴为水平方向，起点在左端</td></tr><tr><td>row-reverse</td><td>主轴为水平方向，起点在右端</td></tr><tr><td>row-column</td><td>主轴为垂直方向，起点在上沿</td></tr><tr><td>column-reverse</td><td>主轴为垂直方向，起点在下沿</td></tr></tbody></table><ul><li><strong>flex-wrap</strong></li></ul><p>默认情况下，项目都排在一条线（又称&quot;轴线&quot;）上。flex-wrap 属性定义，如果一条轴线排不下，如何换行。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>nowrap</td><td>默认，不换行</td></tr><tr><td>wrap</td><td>换行，排在第一行的上方</td></tr><tr><td>wrap-reverse</td><td>换行，第一行在下方</td></tr></tbody></table><ul><li><strong>flex-flow</strong></li></ul><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>\n    <span class="token property">flex-flow</span><span class="token punctuation">:</span> &lt;flex-direction&gt; || &lt;flex-wrap&gt;<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><strong>justify-content</strong></li></ul><p><code>justify-content</code>属性定义了项目在水平的主轴上是如何对齐的</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>flex-start</td><td>默认，左对齐</td></tr><tr><td>flex-end</td><td>右对齐</td></tr><tr><td>conter</td><td>居中</td></tr><tr><td>space-between</td><td>两端对齐，项目之间的间隔都相等</td></tr><tr><td>space-around</td><td>每个项目两侧的间隔相等，所以，项目之间的间隔比项目与边框的间隔大一倍</td></tr></tbody></table><ul><li><strong>align-items</strong></li></ul><p><code>align-items</code>属性定义项目在垂直的交叉轴上如何对齐。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>stretch</td><td>默认值，如果项目未设置高度或为 auto，则占满整个容器的高度</td></tr><tr><td>flex-start</td><td>交叉轴的起点对齐（上沿）</td></tr><tr><td>flex-end</td><td>交叉轴的终点（下沿）齐</td></tr><tr><td>center</td><td>交叉轴的中点对齐</td></tr><tr><td>baseline</td><td>项目的第一行文字的基线对准</td></tr></tbody></table><ul><li><strong>align-content</strong></li></ul><p><code>align-content</code>属性定义了多根轴线的（垂直方向）对齐方式。如果项目只有一根轴线，该属性不起作用。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>stretch</td><td>默认值，轴线占满整个交叉轴</td></tr><tr><td>flex-start</td><td>与交叉轴的起点对齐</td></tr><tr><td>flex-end</td><td>与交叉轴的终点对齐</td></tr><tr><td>center</td><td>与交叉轴的中点对齐</td></tr><tr><td>space-between</td><td>与交叉轴两端对齐，轴线之间的间隔评价分布</td></tr><tr><td>space-around</td><td>每根轴线两侧的间隔都相等。所以，轴线之间的间隔与轴线与边框的间隔大一倍</td></tr></tbody></table><h3 id="项目的属性" tabindex="-1"><a class="header-anchor" href="#项目的属性" aria-hidden="true">#</a> 项目的属性</h3><ul><li><strong>order</strong></li></ul><p><code>order</code>定义项目的排列顺序，数值越小，排名越靠前，默认为 0</p><ul><li><strong>flex-grow</strong></li></ul><p><code>flex-grow</code>属性定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。</p><ul><li><strong>flex-shrink</strong></li></ul><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。</p><ul><li><strong>flex-basis</strong></li></ul><p><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 <code>auto</code>，即项目的本来大小。</p><ul><li><strong>flex</strong></li></ul><p>flex 属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> none | [ &lt; <span class="token string">&quot;flex-grow&quot;</span> &gt; &lt; <span class="token string">&quot;flex-shrink&quot;</span> &gt;? || &lt; <span class="token string">&quot;flex-basis&quot;</span> &gt; ]<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><ul><li><strong>align-self</strong></li></ul><p>align-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。</p><h2 id="grid-布局" tabindex="-1"><a class="header-anchor" href="#grid-布局" aria-hidden="true">#</a> Grid 布局</h2><p><strong>盒子属性</strong></p><p>Grid 即网格布局，一种新的 CSS 布局，是目前唯一一种二维布局，号称最强大的 CSS 布局方案。</p><p><strong>容器和项目</strong>：通过<code>display: gird;</code>或者<code>display: inline-grid</code>声明一个网格容器，其直系子元素将成为网格项目。</p><p><strong>网格轨道</strong>：通过<code>grid-template-rows</code>和<code>grid-template-columns</code>定义网格的行高和列宽。</p><p><strong>网格线</strong>：划分网格的线，称为&quot;网格线&quot;（grid line）。水平网格线划分出行，垂直网格线划分出列。正常情况下，n 行有 n + 1 根水平网格线，m 列有 m + 1 根垂直网格线，比如三行就有四根水平网格线。</p><p><strong>参考</strong></p>',42),r={href:"https://juejin.cn/post/6854573220306255880",target:"_blank",rel:"noopener noreferrer"},i=(0,t.Uk)("最强大的 CSS 布局 —— Grid 布局"),u={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/grid",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("MDN-Grid 布局"),k={href:"https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html",target:"_blank",rel:"noopener noreferrer"},b=(0,t.Uk)("阮一峰-CSS Grid 网格布局教程"),h=(0,t.uE)('<h2 id="rem-布局原理" tabindex="-1"><a class="header-anchor" href="#rem-布局原理" aria-hidden="true">#</a> rem 布局原理</h2><p>rem 是相对长度单位，可以做到一样的取值，在不同尺寸的屏幕上的大小按比例缩放。</p><p><strong>rem 的定义：</strong> rem（font size of the root element）是相对于根元素（即 html 元素）font-size 计算值的倍数。</p><p>例如 html 标签设置<code>font-size:16px</code>，同时 div 设置<code>width:1.2rem</code>。那么这个 div 的宽度就是<code>1.2rem=16px*1.2=19.2px</code>。</p><p>因此这种方法的适配原理是：根据不同屏幕的宽度，以相同的比例动态修改 html 的 font-size 适配，并将 px 替换成 rem，它可以很好的根据根元素的字体大小来进行变化，从而达到各种屏幕基本一直的效果体验。</p><p>参考：</p>',6),m={href:"https://zhuanlan.zhihu.com/p/30413803",target:"_blank",rel:"noopener noreferrer"},g=(0,t.Uk)("rem 布局原理解析"),f={href:"https://blog.csdn.net/weixin_38840741/article/details/81364559",target:"_blank",rel:"noopener noreferrer"},x=(0,t.Uk)("移动端适配方案-REM"),v=(0,t.uE)('<h2 id="大屏适配方案-scale" tabindex="-1"><a class="header-anchor" href="#大屏适配方案-scale" aria-hidden="true">#</a> 大屏适配方案（Scale）</h2><p>Vue3版本：</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>screen-adapter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content-wrap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>style<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> debounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> onBeforeUnmount<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">1920px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">1080px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  transform<span class="token operator">:</span> <span class="token string">&#39;scale(1) translate(-50%, -50%)&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 默认不缩放，垂直水平居中</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">setScale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>\n    <span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span>\n    <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setScale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getScale</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> w <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> <span class="token number">1980</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> h <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">/</span> <span class="token number">1080</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> w <span class="token operator">&lt;</span> h <span class="token operator">?</span> w <span class="token operator">:</span> h<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// 设置缩放比例</span>\n<span class="token keyword">const</span> <span class="token function-variable function">setScale</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  style<span class="token punctuation">.</span>value<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">scale(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">getScale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) translate(-50%, -50%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onresize<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.screen-adapter</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>\n  <span class="token property">min-height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">max-height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n\n  <span class="token selector">.content-wrap</span> <span class="token punctuation">{</span>\n    <span class="token property">transform-origin</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> solid 2px red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div>',3),y=(0,t.Uk)("引入该组件即可使用scale布局，灵感来自于："),w={href:"https://zhuanlan.zhihu.com/p/443254464",target:"_blank",rel:"noopener noreferrer"},_=(0,t.Uk)("大屏可视化屏幕适配的几种方法"),C=(0,t.Uk)("、"),S={href:"https://juejin.cn/post/7148733509744459790",target:"_blank",rel:"noopener noreferrer"},B=(0,t.Uk)("数据大屏最简单自适应方案，无需适配rem单位"),F=(0,t.uE)('<h2 id="css-画形状" tabindex="-1"><a class="header-anchor" href="#css-画形状" aria-hidden="true">#</a> CSS 画形状</h2><p><strong>HTML</strong></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shape<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>CSS</strong></p><ul><li>三角形</li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.shape</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n    <span class="token property">border-top</span><span class="token punctuation">:</span> solid transparent 100px<span class="token punctuation">;</span>\n    <span class="token property">border-right</span><span class="token punctuation">:</span> solid transparent 100px<span class="token punctuation">;</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> solid gray 100px<span class="token punctuation">;</span>\n    <span class="token property">border-left</span><span class="token punctuation">:</span> solid transparent 100px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="伪类" tabindex="-1"><a class="header-anchor" href="#伪类" aria-hidden="true">#</a> 伪类</h2><p>什么是伪类？</p><blockquote><p>伪类是选择器的一种，它用于选择处于特定状态的元素，比如当它们是这一类型的第一个元素时，或者是当鼠标指针悬浮在元素上面的时候。它们表现得会像是你向你的文档的某个部分应用了一个类一样，帮你在你的标记文本中减少多余的类，让你的代码更灵活、更易于维护。</p></blockquote><p>伪类就是开头为冒号的关键字：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>:pseudo-class-name\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="用户行为类" tabindex="-1"><a class="header-anchor" href="#用户行为类" aria-hidden="true">#</a> 用户行为类</h3><ul><li>:hover</li><li>:focus</li></ul><h3 id="元素选择类" tabindex="-1"><a class="header-anchor" href="#元素选择类" aria-hidden="true">#</a> 元素选择类</h3>',14),q=(0,t._)("li",null,[(0,t._)("p",null,":last-child——选择最后一个元素")],-1),E=(0,t._)("li",null,[(0,t._)("p",null,":first-child——选择第一个元素")],-1),U=(0,t._)("li",null,[(0,t._)("p",null,":not(some-element)——反向选择其他元素")],-1),z=(0,t._)("li",null,[(0,t._)("p",null,":nth-child(an+b)——选择所筛选的元素")],-1),W=(0,t._)("li",null,null,-1),M={href:"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements#%E4%BB%80%E4%B9%88%E6%98%AF%E4%BC%AA%E7%B1%BB%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"},L=(0,t.Uk)("什么是伪类"),A=(0,t.uE)('<h2 id="伪元素" tabindex="-1"><a class="header-anchor" href="#伪元素" aria-hidden="true">#</a> 伪元素</h2><p>伪元素以类似方式表现，不过表现得是像你往标记文本中加入全新的 HTML 元素一样，而不是向现有的元素上应用类。伪元素开头为双冒号::。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>::pseudo-element-name\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>常用伪元素一览</p>',4),H=(0,t._)("li",null,[(0,t._)("p",null,"after（最后一个子元素）")],-1),j=(0,t._)("li",null,[(0,t._)("p",null,"before（第一个子元素）")],-1),G={href:"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements#%E4%BC%AA%E5%85%83%E7%B4%A0%E6%98%AF%E5%95%A5%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"},T=(0,t.Uk)("什么是伪元素"),N=(0,t.uE)('<h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践" aria-hidden="true">#</a> 最佳实践</h2><ul><li><strong>H5 强制横屏（1）</strong></li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">orientation</span><span class="token punctuation">:</span> portrait<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n    <span class="token selector">#app</span> <span class="token punctuation">{</span>\n        <span class="token property">transform-origin</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>\n        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-100%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100vh <span class="token important">!important</span><span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 100vw <span class="token important">!important</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><strong>H5 强制横屏（2）</strong></li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">orientation</span><span class="token punctuation">:</span> portrait<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n    <span class="token selector">html</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100vmin<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 100vmax<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token selector">body</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100vmin<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 100vmax<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token selector">#content</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100vmax<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 100vmin<span class="token punctuation">;</span>\n        <span class="token property">transform-origin</span><span class="token punctuation">:</span> top left<span class="token punctuation">;</span>\n        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translate</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> -100vmin<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">orientation</span><span class="token punctuation">:</span> landscape<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n    <span class="token selector">html</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100vmax<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 100vmin<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token selector">body</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100vmax<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 100vmin<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token selector">#content</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100vmax<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 100vmin<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><ul><li><strong>样式隔离</strong></li></ul>',6),D=(0,t.Uk)("使用 "),P={href:"https://github.com/css-modules/css-modules",target:"_blank",rel:"noopener noreferrer"},R=(0,t.Uk)("css-modules"),I=(0,t.Uk)(" 为每个 class 生成随机的哈希值，以做到样式的隔离。"),Y=(0,t.Uk)("参考： "),O={href:"http://www.ruanyifeng.com/blog/2016/06/css_modules.html",target:"_blank",rel:"noopener noreferrer"},V=(0,t.Uk)("CSS Modules 用法教程"),Z={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t._)("p",null,[p,(0,t._)("a",l,[o,(0,t.Wm)(a)])]),c,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",r,[i,(0,t.Wm)(a)])]),(0,t._)("li",null,[(0,t._)("a",u,[d,(0,t.Wm)(a)])]),(0,t._)("li",null,[(0,t._)("a",k,[b,(0,t.Wm)(a)])])]),h,(0,t._)("ol",null,[(0,t._)("li",null,[(0,t._)("a",m,[g,(0,t.Wm)(a)])]),(0,t._)("li",null,[(0,t._)("a",f,[x,(0,t.Wm)(a)])])]),v,(0,t._)("p",null,[y,(0,t._)("a",w,[_,(0,t.Wm)(a)]),C,(0,t._)("a",S,[B,(0,t.Wm)(a)])]),F,(0,t._)("ul",null,[q,E,U,z,W,(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("a",M,[L,(0,t.Wm)(a)])])])]),A,(0,t._)("ul",null,[H,j,(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("a",G,[T,(0,t.Wm)(a)])])])]),N,(0,t._)("p",null,[D,(0,t._)("a",P,[R,(0,t.Wm)(a)]),I]),(0,t._)("p",null,[Y,(0,t._)("a",O,[V,(0,t.Wm)(a)])])],64)}}}}]);