"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3165],{6891:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-3908281e",path:"/articles/WeApp/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E5%9B%BE%E7%89%87%E5%B9%B6%E4%BF%9D%E5%AD%98.html",title:"小程序生成图片并保存",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"前端处理",slug:"前端处理",children:[{level:3,title:"绘制 Canvas 并保存",slug:"绘制-canvas-并保存",children:[]}]},{level:2,title:"后端处理",slug:"后端处理",children:[{level:3,title:"返回 base64 数据显示图片并保存",slug:"返回-base64-数据显示图片并保存",children:[]},{level:3,title:"保存网络图片到本地",slug:"保存网络图片到本地",children:[]}]}],filePathRelative:"articles/WeApp/小程序生成海报图片并保存.md",git:{}}},4813:(n,s,a)=>{a.r(s),a.d(s,{default:()=>f});var p=a(6252);const t=(0,p.uE)('<h1 id="小程序生成图片并保存" tabindex="-1"><a class="header-anchor" href="#小程序生成图片并保存" aria-hidden="true">#</a> 小程序生成图片并保存</h1><p>自己做过几个小程序生成图片并保存的功能，觉得做这个功能用到的还挺多的，记录一下。</p><p>总体可以分为:</p><ul><li>前端处理：后端返回数据，前端自己将图片、文字等画到 <code>canvas</code> 上，然后转图片。</li><li>后端处理：后端直接返回图片，前端只做保存功能。</li></ul><h2 id="前端处理" tabindex="-1"><a class="header-anchor" href="#前端处理" aria-hidden="true">#</a> 前端处理</h2><h3 id="绘制-canvas-并保存" tabindex="-1"><a class="header-anchor" href="#绘制-canvas-并保存" aria-hidden="true">#</a> 绘制 Canvas 并保存</h3>',6),e=(0,p.Uk)("小程序有强大的 "),o=(0,p._)("code",null,"canvas",-1),c=(0,p.Uk)(" 可以转成图片并保存，具体API看 "),l={href:"https://developers.weixin.qq.com/miniprogram/dev/component/canvas.html",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("文档"),r=(0,p.Uk)(" 。"),i=(0,p.uE)('<p>但是 <code>canvas</code> 的原生操作过于啰嗦，比如画一个字上去：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ctx <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">createCanvasContext</span><span class="token punctuation">(</span><span class="token string">&#39;myCanvas&#39;</span><span class="token punctuation">)</span>\n\nctx<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\nctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>\nctx<span class="token punctuation">.</span><span class="token function">setFillStyle</span><span class="token punctuation">(</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span>\n\nctx<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',2),k=(0,p.Uk)("在这里我推荐一个库："),b={href:"https://github.com/LaoCheng-cjs/wx_poster",target:"_blank",rel:"noopener noreferrer"},m=(0,p.Uk)("wx_poster"),d=(0,p.Uk)(" 可以简化操作."),h=(0,p.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>wx_poster<span class="token punctuation">.</span><span class="token function">inits</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> \n    wx_poster<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Hello World&#39;<span class="token punctuation">,</span><span class="token punctuation">{</span>\n        size<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>\n        x<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        y<span class="token operator">:</span> <span class="token number">20</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>最后将 <code>canvas</code> 转成图片并保存就行了</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 在ctx.draw() 之后后调用</span>\nwx<span class="token punctuation">.</span><span class="token function">canvasToTempFilePath</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  x<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  y<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n  destWidth<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  destHeight<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  canvasId<span class="token operator">:</span> <span class="token string">&#39;myCanvas&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>tempFilePath<span class="token punctuation">)</span>\n        wx<span class="token punctuation">.</span><span class="token function">saveImageToPhotosAlbum</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// 保存到相册</span>\n        filePath<span class="token operator">:</span> res<span class="token punctuation">.</span>tempFilePath<span class="token punctuation">,</span>\n        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          wx<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              title<span class="token operator">:</span> <span class="token string">&#39;保存成功&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="后端处理" tabindex="-1"><a class="header-anchor" href="#后端处理" aria-hidden="true">#</a> 后端处理</h2><blockquote><p>整个图片都是后端返回的，前端只管保存就行了。</p></blockquote><h3 id="返回-base64-数据显示图片并保存" tabindex="-1"><a class="header-anchor" href="#返回-base64-数据显示图片并保存" aria-hidden="true">#</a> 返回 base64 数据显示图片并保存</h3><blockquote><p>后端返回 base64 格式的情况</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> imgSrc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>imgSrc<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这里是把 data:image/png;base64,  这一段去除）</span>\n<span class="token keyword">var</span> save <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getFileSystemManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> number <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>\nsave<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    filePath<span class="token operator">:</span> wx<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span> <span class="token operator">+</span> <span class="token string">&#39;/pic&#39;</span> <span class="token operator">+</span> number <span class="token operator">+</span> <span class="token string">&#39;.jpg&#39;</span><span class="token punctuation">,</span>\n    data<span class="token operator">:</span> imgSrc<span class="token punctuation">,</span>\n    encoding<span class="token operator">:</span> <span class="token string">&#39;base64&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    wx<span class="token punctuation">.</span><span class="token function">saveImageToPhotosAlbum</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// 保存到相册</span>\n        filePath<span class="token operator">:</span> wx<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span> <span class="token operator">+</span> <span class="token string">&#39;/pic&#39;</span> <span class="token operator">+</span> number <span class="token operator">+</span> <span class="token string">&#39;.jpg&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        wx<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;保存成功&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">//   参考：https://www.cnblogs.com/china-fanny/p/11213746.html</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="保存网络图片到本地" tabindex="-1"><a class="header-anchor" href="#保存网络图片到本地" aria-hidden="true">#</a> 保存网络图片到本地</h3><blockquote><p>返回网络图片并保存</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function-variable function">saveToPhone</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    wx<span class="token punctuation">.</span><span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      url<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 网络图片地址</span>\n      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        wx<span class="token punctuation">.</span><span class="token function">saveImageToPhotosAlbum</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          filePath<span class="token operator">:</span> res<span class="token punctuation">.</span>tempFilePath<span class="token punctuation">,</span>\n          <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>',11),f={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[e,o,c,(0,p._)("a",l,[u,(0,p.Wm)(a)]),r]),i,(0,p._)("p",null,[k,(0,p._)("a",b,[m,(0,p.Wm)(a)]),d]),h],64)}}}}]);