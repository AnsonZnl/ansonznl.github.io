"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2914],{2241:(e,r,l)=>{l.r(r),l.d(r,{data:()=>a});const a={key:"v-4b8513cc",path:"/articles/Performance/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html",title:"微信小程序性能优化",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"小程序的架构",slug:"小程序的架构",children:[]},{level:2,title:"首屏启动",slug:"首屏启动",children:[]},{level:2,title:"优化手段",slug:"优化手段",children:[]},{level:2,title:"性能监控",slug:"性能监控",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"articles/Performance/微信小程序性能优化.md",git:{}}},3549:(e,r,l)=>{l.r(r),l.d(r,{default:()=>J});var a=l(6252);const t=(0,a.uE)('<h1 id="微信小程序性能优化" tabindex="-1"><a class="header-anchor" href="#微信小程序性能优化" aria-hidden="true">#</a> 微信小程序性能优化</h1><h2 id="小程序的架构" tabindex="-1"><a class="header-anchor" href="#小程序的架构" aria-hidden="true">#</a> 小程序的架构</h2><p>首先要了解的是：小程序的底层运行环境分逻辑层和渲染层：</p><ul><li>逻辑层是 JScore，主要是 JS 脚本工作</li><li>渲染层是 webview，主要是 WXML 和 WXSS 渲染页面</li></ul><p>WXML 其实可以看做一个 DOM 树，通过 JS 对象描写的 DOM 结构</p><p>小程序的逻辑层和渲染层是分开的两个线程。在渲染层，宿主环境会把 WXML 转化成对应的 JS 对象，在逻辑层发生数据变更的时候，我们需要通过宿主环境提供的 setData 方法把数据从逻辑层传递到渲染层，再经过对比前后差异，把差异应用在原来的 Dom 树上，渲染出正确的 UI 界面，所以频繁的 setData 会影响小程序的性能.</p><p>小程序的 JS 脚本是运行在 JsCore 的线程里，小程序的每个页面各自有一个 WebView 线程进行渲染，所以小程序切换页面时，小程序逻辑层的 JS 脚本运行上下文依旧在同一个 JsCore 线程中。在上文中说道 App 实例是单例的，因此不同页面直接可以通过 App 实例下的属性来共享数据。App 构造器可以传递其他参数作为全局属性以达到全局共享数据的目的。</p><p>所以 setTimeout 和 setInterval 是全局的函数，会作用在全局中，一定要注意使用之后 clear 掉。</p><h2 id="首屏启动" tabindex="-1"><a class="header-anchor" href="#首屏启动" aria-hidden="true">#</a> 首屏启动</h2><p>首页渲染耗时主要受页面结构和参与渲染的数据量影响。</p>',10),n=(0,a.Uk)("首屏图片过多时请使用图片"),i={href:"https://developers.weixin.qq.com/miniprogram/dev/component/image.html",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("懒加载"),d=(0,a.Uk)("和"),h={href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/skeleton.html",target:"_blank",rel:"noopener noreferrer"},s=(0,a.Uk)("骨架屏"),c=(0,a.Uk)("。"),p=(0,a._)("li",null,[(0,a.Uk)("分包：代码包过大通常使用分包来解决 "),(0,a._)("ul",null,[(0,a._)("li",null,"分包预下载：在进入小程序某个页面时，由框架自动预下载可能需要的分包，提升进入后续分包页面时的启动速度。"),(0,a._)("li",null,"通常功能不是很复杂且相对独立（支付页、广告页），对启动性能有很高的要求。独立分包可以独立于主包和其他分包运行。从独立分包中页面进入小程序时，不需要下载主包。建议开发者将部分对启动性能要求很高的页面放到特殊的独立分包中。")])],-1),u=(0,a._)("li",null,"善用本地缓存：储存 token、userinfo 等信息，并通过一定的机制定期进行更新",-1),m=(0,a.uE)('<h2 id="优化手段" tabindex="-1"><a class="header-anchor" href="#优化手段" aria-hidden="true">#</a> 优化手段</h2><ul><li>代码重构和优化：例如使用 webpack 等打包工具，删除无用的代码。</li><li>图片资源：避免在本地使用大图片，大图可以放在服务器的静态资源里，长列表图使用懒加载。</li><li>频繁的执行<code>this.setData</code>会使得 JS 线程一直在更新数据，从而改变 webview 的重绘，使得渲染线程变卡顿。可以将多次的操作合并为一次。</li><li>谨慎使用<code>setinterval</code>，由于小程序的设计问题，定时器是全局的，使用之后记得清理定时器。</li><li>于渲染视图无关的数据尽量不要放在<code>data</code>中，可以使用<strong>纯数据字段来表示</strong>，也就是<code>this.xx</code></li></ul><h2 id="性能监控" tabindex="-1"><a class="header-anchor" href="#性能监控" aria-hidden="true">#</a> 性能监控</h2>',3),f={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/update-perf-stat.html",target:"_blank",rel:"noopener noreferrer"},k=(0,a.Uk)("获取更新性能统计信息"),_=(0,a.Uk)(": 如果想要知道 setData 引发界面更新的开销，可以使用更新性能统计信息接口。它将返回每次更新中主要更新步骤发生的时间戳，可以用来大体上估计自定义组件（或页面）更新性能"),g=(0,a._)("li",null,"小程序助手【性能分析】板块，查看小程序的启动性能、运行性能和网络性能。",-1),v=(0,a.Uk)("体验评分，开发工具自带"),b={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/audits/audits.html",target:"_blank",rel:"noopener noreferrer"},w=(0,a.Uk)("体验评分"),U=(0,a.Uk)("的工具。"),x=(0,a._)("li",null,[(0,a.Uk)("使用"),(0,a._)("code",null,"wx.getPerformance"),(0,a.Uk)("，获取当前小程序性能相关的信息,在获取信息后，可以自行上报或使用 "),(0,a._)("code",null,"wx.reportPerformance"),(0,a.Uk)(" 进行测速")],-1),E=(0,a._)("h2",{id:"参考",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),(0,a.Uk)(" 参考")],-1),q={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start.html",target:"_blank",rel:"noopener noreferrer"},W=(0,a.Uk)("性能与体验"),S={href:"https://developers.weixin.qq.com/ebook?action=get_post_info&docid=0000286f908988db00866b85f5640a",target:"_blank",rel:"noopener noreferrer"},D=(0,a.Uk)("小程序宿主环境"),J={render:function(e,r){const l=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,(0,a._)("ul",null,[(0,a._)("li",null,[n,(0,a._)("a",i,[o,(0,a.Wm)(l)]),d,(0,a._)("a",h,[s,(0,a.Wm)(l)]),c]),p,u]),m,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",f,[k,(0,a.Wm)(l)]),_]),g,(0,a._)("li",null,[v,(0,a._)("a",b,[w,(0,a.Wm)(l)]),U]),x]),E,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",q,[W,(0,a.Wm)(l)])]),(0,a._)("li",null,[(0,a._)("a",S,[D,(0,a.Wm)(l)])])])],64)}}}}]);