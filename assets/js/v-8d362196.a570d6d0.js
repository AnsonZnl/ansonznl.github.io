"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1566],{3545:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-8d362196",path:"/articles/Next/%E5%A6%82%E4%BD%95%E5%B0%86Next.js%E9%83%A8%E7%BD%B2%E5%88%B0GithubPages.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Vercel 部署",slug:"vercel-部署",children:[]},{level:2,title:"部署到 Node 服务器",slug:"部署到-node-服务器",children:[]},{level:2,title:"静态部署（Github Page）",slug:"静态部署-github-page",children:[]},{level:2,title:"Github 配置",slug:"github-配置",children:[]},{level:2,title:"常见问题",slug:"常见问题",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"articles/Next/如何将Next.js部署到GithubPages.md",git:{}}},4079:(n,s,a)=>{a.r(s),a.d(s,{default:()=>on});var e=a(6252);const t=(0,e.uE)('<p>先了解下常用的三种部署方式的简单介绍以及它们的优缺点：</p><ol><li><p><strong>Vercel 部署</strong>:</p><ul><li><p><strong>优点</strong>:</p><ul><li>极其简单：Vercel 提供了与 Next.js 集成良好的部署平台，使得部署变得非常容易。</li><li>自动化：Vercel 提供自动部署、CI/CD 和部署预览等功能，大大简化了部署流程。</li><li>高性能：Vercel 的服务器分布在全球多个地点，确保站点的高性能和快速加载速度。</li></ul></li><li><p><strong>缺点</strong>:</p><ul><li>有费用：尽管有免费套餐，但高级功能可能需要付费。</li><li>有一定学习曲线：对于初学者来说，可能需要一些时间来适应 Vercel 平台。</li></ul></li></ul></li><li><p><strong>服务器部署</strong>:</p><ul><li><p><strong>优点</strong>:</p><ul><li>灵活性：你可以选择任何云提供商或自己的服务器来托管 Next.js 应用，从而具有更大的自定义和控制权。</li><li>适用于大型应用：适用于需要大规模处理的应用，可以根据需求调整服务器资源。</li></ul></li><li><p><strong>缺点</strong>:</p><ul><li>更复杂：需要自行设置服务器环境、Nginx 或其他反向代理，以及部署流程，这可能相对复杂，特别是对新手来说。</li><li>成本：取决于所选的云提供商，成本可能会较高，尤其是在流量大或需要高性能服务器时。</li></ul></li></ul></li><li><p><strong>静态部署</strong>:</p><ul><li><p><strong>GitHub Pages 部署</strong>:</p><ul><li><p><strong>优点</strong>:</p><ul><li>免费：GitHub Pages 是免费托管静态文件的好选择。</li><li>集成：与 GitHub 仓库集成，使得发布变得非常简单。</li><li>适用于文档和演示：适用于文档站点、演示和小型项目。</li></ul></li><li><p><strong>缺点</strong>:</p><ul><li>有限制：GitHub Pages 有一些限制，如每月带宽限制，不适合大规模应用。</li><li>静态：GitHub Pages 仅支持静态文件托管，对于需要服务器端渲染的应用不适用。</li></ul></li></ul></li></ul></li></ol><p>由于 GitHub Pages 是静态网站托管服务，因此它不支持在服务端渲染应用程序。</p><p>因此，您需要使用 Next.js 的静态导出功能来生成静态文件并将其部署到 GitHub Pages 上。</p><h2 id="vercel-部署" tabindex="-1"><a class="header-anchor" href="#vercel-部署" aria-hidden="true">#</a> Vercel 部署</h2><p>这个最简单了，直接在 GitHub 新建 Next.js 项目之后在 Vercel 导入即可，不仅支持自动部署，还可以提供免费的服务运行环境。</p>',6),p=(0,e.Uk)("可以参考官方文档："),o={href:"https://vercel.com/docs/frameworks/nextjs",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("vercel next depoly"),r=(0,e.uE)('<p>当然，Vercel 部署的网站是会自动分配一个可访问的 <code>vercel.app</code> 后缀的域名的，但是国内因为某些原因访问不了，这里告诉大家一个方法，可以在国内购买一个域名，然后绑定一下就可以了。</p><h2 id="部署到-node-服务器" tabindex="-1"><a class="header-anchor" href="#部署到-node-服务器" aria-hidden="true">#</a> 部署到 Node 服务器</h2><p>Next.js 可以部署到任何支持 Node.js 的托管提供商。例如，阿里云服务器或腾讯云服务器。</p><p>如果是我们自己购买的云服务，可以使用这种方式，首先先在服务里安装 Node 环境，然后执行 <code>build</code> 命令以后,生成的内容默认在<code>.next</code>文件夹里</p><div class="language-package ext-package line-numbers-mode"><pre class="language-package"><code>{\n  &quot;scripts&quot;: {\n    &quot;dev&quot;: &quot;next dev&quot;,\n    &quot;build&quot;: &quot;next build&quot;,\n    &quot;start&quot;: &quot;next start&quot;\n  }\n}\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>然后，运行  <code>npm run build</code>  以生成应用程序。最后，运行  <code>npm run start</code>  以启动 Node.js 服务器。此服务器支持 Next.js 的所有功能。</p><p>也可以用 docker 部署。</p>',7),i=(0,e.Uk)("Next.js 可以部署到任何支持"),c={href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("Docker 的托管提供商"),k=(0,e.Uk)("容器。"),b={href:"https://kubernetes.io/",target:"_blank",rel:"noopener noreferrer"},g=(0,e.Uk)("部署到 Kubernetes"),d=(0,e.Uk)("等容器编排器时，您可以使用此方法或"),m={href:"https://www.nomadproject.io/",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("HashiCorp Nomad"),f=(0,e.Uk)("，或者在任何云提供商的单个节点内运行时。"),x={href:"https://docs.docker.com/get-docker/",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Uk)("安装 Docker"),_=(0,e.Uk)("在你的机器上"),w=(0,e.Uk)("克隆"),v={href:"https://github.com/vercel/next.js/tree/canary/examples/with-docker",target:"_blank",rel:"noopener noreferrer"},F=(0,e.Uk)("with-docker"),y=(0,e.Uk)("例子"),q=(0,e._)("li",null,[(0,e.Uk)("构建你的容器："),(0,e._)("code",null,"docker build -t nextjs-docker .")],-1),U=(0,e._)("li",null,[(0,e.Uk)("运行你的容器："),(0,e._)("code",null,"docker run -p 3000:3000 nextjs-docker")],-1),G=(0,e.Uk)("如果您需要在多个环境中使用不同的环境变量，请查看官方的"),P={href:"https://github.com/vercel/next.js/tree/canary/examples/with-docker-multi-env",target:"_blank",rel:"noopener noreferrer"},A=(0,e.Uk)("with-docker-multi-env"),H=(0,e.Uk)("例子。"),N=(0,e.uE)('<h2 id="静态部署-github-page" tabindex="-1"><a class="header-anchor" href="#静态部署-github-page" aria-hidden="true">#</a> 静态部署（Github Page）</h2><p>当我们的应用没有服务相关的功能时，可以选择静态部署，静态部署和正常使用 React 部署是一样的，只不过我们是部署在 GitHub 上。</p><p>首先在<code>next.config.js</code>中配置：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> nextConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  output<span class="token operator">:</span> <span class="token string">&quot;export&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>将打包命令加入到<code>package.json</code>里，然后执行<code>npm run build</code>。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token string">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;next build &amp;&amp; next export&quot;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>默认生成的静态页面在<code>out</code>文件夹里</p><h2 id="github-配置" tabindex="-1"><a class="header-anchor" href="#github-配置" aria-hidden="true">#</a> Github 配置</h2><p>设置 pages 页面的分支为 gh-pages 分支。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/18b5eef20e2d4c6480a92b10af109e59~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1640&amp;h=751&amp;s=151451&amp;e=png&amp;b=ffffff" alt="image.png"></p><p>在<code>next.config.js</code>中设置打包后静态资源的路径，也就是仓库名字。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;next&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>NextConfig<span class="token punctuation">}</span></span> */</span>\n<span class="token keyword">const</span> repo <span class="token operator">=</span> <span class="token string">&quot;dir-tree&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> assetPrefix <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>repo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> basePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>repo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> nextConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  basePath<span class="token punctuation">,</span>\n  assetPrefix<span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token string">&quot;export&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> nextConfig<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>我们本地开发不需要带有 repo 的前缀，所以为了不影响本地开发，所以我们需要加个判断，只有在 GitHub 构建时才加前缀。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;next&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>NextConfig<span class="token punctuation">}</span></span> */</span>\n\n<span class="token keyword">const</span> isGithubActions <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GITHUB_ACTIONS</span> <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> assetPrefix <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> basePath <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isGithubActions<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 去掉 `&lt;owner&gt;/`</span>\n  <span class="token keyword">const</span> repo <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GITHUB_REPOSITORY</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*?\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  assetPrefix <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>repo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n  basePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>repo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> nextConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  basePath<span class="token punctuation">,</span>\n  assetPrefix<span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token string">&quot;export&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> nextConfig<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>改完之后，直接推送到仓库，即可成功！</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/364325aaca6b4a40a0996f91c9b92a6c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1168&amp;h=776&amp;s=97580&amp;e=png&amp;b=25292f" alt="image.png"></p>',16),W=(0,e.Uk)("如果你想看完整代码可以去 "),C={href:"https://github.com/AnsonZnl/dir-tree",target:"_blank",rel:"noopener noreferrer"},E=(0,e.Uk)("我的仓库"),V=(0,e.Uk)(" 查阅"),D=(0,e.uE)('<h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><p>如果在构建过程中遇到这个问题，请按照第二图解决即可。 <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dbf3ff36248546c59af83335cd2165d7~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1386&amp;h=687&amp;s=406614&amp;e=png&amp;b=262a30" alt="问题截图"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f8c6fc0604744d08a6d8c904d7f0cdd~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1448&amp;h=760&amp;s=419791&amp;e=png&amp;b=ffffff" alt="解决方法"></p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',4),B={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fmarketplace%2Factions%2Fgithub-pages-action",target:"_blank",rel:"noopener noreferrer"},I=(0,e.Uk)("Github Pages Action"),O={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fdocs.github.com%2Fcn%2Factions%2Fsecurity-guides%2Fautomatic-token-authentication",target:"_blank",rel:"noopener noreferrer"},R=(0,e.Uk)("自动令牌身份验证"),S={href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2019%2F09%2Fgetting-started-with-github-actions.html",title:"https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html",target:"_blank",rel:"noopener noreferrer"},T=(0,e.Uk)("(主要借鉴) 阮一峰 - GitHub Actions 入门教程"),$={href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.viget.com%2Farticles%2Fhost-build-and-deploy-next-js-projects-on-github-pages%2F",title:"https://www.viget.com/articles/host-build-and-deploy-next-js-projects-on-github-pages/",target:"_blank",rel:"noopener noreferrer"},Y=(0,e.Uk)("(主要借鉴) Using GitHub Pages to Build, Deploy, and Host Next.js"),L={href:"https://link.juejin.cn?target=https%3A%2F%2Fwallis.dev%2Fblog%2Fcomposite-github-actions",title:"https://wallis.dev/blog/composite-github-actions",target:"_blank",rel:"noopener noreferrer"},K=(0,e.Uk)("Using Composite GitHub Actions to make your Workflows smaller and more reusable"),Z={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.blog%2F2023-03-28-announcing-the-github-actions-extension-for-vs-code%2F",title:"https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/",target:"_blank",rel:"noopener noreferrer"},z=(0,e.Uk)("GitHub Actions - Announcing the GitHub Actions extension for VS Code"),J={href:"https://link.juejin.cn?target=https%3A%2F%2Fmaximorlov.com%2Fdeploying-to-github-pages-dont-forget-to-fix-your-links%2F",title:"https://maximorlov.com/deploying-to-github-pages-dont-forget-to-fix-your-links/",target:"_blank",rel:"noopener noreferrer"},M=(0,e.Uk)("Deploying to Github Pages? Don't Forget to Fix Your Links"),Q={href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.viget.com%2Farticles%2Fautomating-build-deploy-ci-cd-with-github-actions%2F",title:"https://www.viget.com/articles/automating-build-deploy-ci-cd-with-github-actions/",target:"_blank",rel:"noopener noreferrer"},X=(0,e.Uk)("Automating build/deploy CI/CD with GitHub Actions"),nn={href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.freecodecamp.org%2Fchinese%2Fnews%2Fautomate-open-source-projects-with-github-actions%2F",title:"https://www.freecodecamp.org/chinese/news/automate-open-source-projects-with-github-actions/",target:"_blank",rel:"noopener noreferrer"},sn=(0,e.Uk)("如何使用 GitHub Actions 实现开源项目的自动化"),an={href:"https://juejin.cn/post/7220410343649624121#heading-0",target:"_blank",rel:"noopener noreferrer"},en=(0,e.Uk)("使用 GitHub Actions 构建、部署 Next.js 并将其托管到 GitHub Pages"),tn={href:"https://nextjs.org/docs/app/building-your-application/deploying/static-exports",target:"_blank",rel:"noopener noreferrer"},pn=(0,e.Uk)("Vercel static exports"),on={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[p,(0,e._)("a",o,[l,(0,e.Wm)(a)])]),r,(0,e._)("p",null,[i,(0,e._)("a",c,[u,(0,e.Wm)(a)]),k,(0,e._)("a",b,[g,(0,e.Wm)(a)]),d,(0,e._)("a",m,[h,(0,e.Wm)(a)]),f]),(0,e._)("ol",null,[(0,e._)("li",null,[(0,e._)("a",x,[j,(0,e.Wm)(a)]),_]),(0,e._)("li",null,[w,(0,e._)("a",v,[F,(0,e.Wm)(a)]),y]),q,U]),(0,e._)("p",null,[G,(0,e._)("a",P,[A,(0,e.Wm)(a)]),H]),N,(0,e._)("p",null,[W,(0,e._)("a",C,[E,(0,e.Wm)(a)]),V]),D,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",B,[I,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",O,[R,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",S,[T,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",$,[Y,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",L,[K,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",Z,[z,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",J,[M,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",Q,[X,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",nn,[sn,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",an,[en,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("a",tn,[pn,(0,e.Wm)(a)])])])])],64)}}}}]);