"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1645],{2742:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-66e1b4c4",path:"/articles/Node/%E5%88%9D%E8%AF%95MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.html",title:"初试 MongoDB 数据库",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"数据库基本概念",slug:"数据库基本概念",children:[]},{level:2,title:"数据库分类",slug:"数据库分类",children:[]},{level:2,title:"数据库 MongoDB 安装",slug:"数据库-mongodb-安装",children:[]},{level:2,title:"在命令行中使用 MongoDB 插入命令",slug:"在命令行中使用-mongodb-插入命令",children:[]},{level:2,title:"MongoDB 可视化工具 【NOSQL】",slug:"mongodb-可视化工具-【nosql】",children:[]},{level:2,title:"使用可视化工具",slug:"使用可视化工具",children:[]},{level:2,title:"数据库更新命令",slug:"数据库更新命令",children:[]}],filePathRelative:"articles/Node/初试MongoDB数据库.md",git:{}}},6196:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const t=(0,a(6252).uE)('<h1 id="初试-mongodb-数据库" tabindex="-1"><a class="header-anchor" href="#初试-mongodb-数据库" aria-hidden="true">#</a> 初试 MongoDB 数据库</h1><h2 id="数据库基本概念" tabindex="-1"><a class="header-anchor" href="#数据库基本概念" aria-hidden="true">#</a> 数据库基本概念</h2><p><strong>数据库（Database）基本概念：</strong></p><ol><li>数据库就是按照一定的数据结构来组织，储存和管理数据的仓库</li><li>我们写的程序都是在内存中运行的，一旦程序运行结束或者计算机断点，程序运行中的数据就会全部丢失；所以我们就需要将一些程序的数据持久化到键盘之中，以确保数据的安全性。</li><li>数据库则是大批量数据持久化的普遍选择，1.文件 2. 数据库</li></ol><p><strong>为什么都采用数据库来储存数据:</strong></p><ul><li>数据库是有结构的</li><li>数据库可以提供各种接口，让数据处理（增删改查）快捷方便</li><li>各种语言（PHP jsp .net..）提供了完善的接口</li></ul><p><img src="https://gitee.com/zhangningle/imgs/raw/master/blog/Node/mongo-1.png" alt="mongo-1"></p><h2 id="数据库分类" tabindex="-1"><a class="header-anchor" href="#数据库分类" aria-hidden="true">#</a> 数据库分类</h2><ol><li>ROBMS（关系型数据库）： <ul><li>比如 MySql 、sql server Oracle 等</li><li>特点 通过一张张表来建立关联</li><li>基本都使用 SQL 语言来管理数据库，</li></ul></li><li>Nosql (非关系型数据库)： <ul><li>没有行 、列的概念 用 json 类储存数据</li><li>集合相当于“表”，文档相当于“行”</li><li>标准化和非标准化的摩擦。</li><li>标准化限制创新，非标准话不能统一</li></ul></li></ol><p><strong>特征</strong>： 使用键值（Key Value）储存数据； MongoDB 的逻辑结构是一种层次结构，主要由：文档(document)、集合(collection)、数据库(database)这三部分组成的。</p><ul><li>文档(document)：由键/值对构成，像{a:1}；{s:”abc”}等，它是 MongoDB 核心单元，MongoDB 的文档（document），相当于关系数据库中的一行记录。</li><li>集合（Collection）：多个文档组成一个集合（collection），相当于关系数据库的表。</li><li>数据库（database）：多个集合（collection），逻辑上组织在一起，就是数据库（database）。 一个 MongoDB 实例支持多个数据库（database）。</li></ul><p><strong>关系型数据库和非关系型数据库区别：</strong> 关系型数据库比较结构化，操作不是很灵活，菲关系型数据库操作灵活，但不适合大型数据存储，比较适合微架构，两者是相辅相成的关系 <img src="https://gitee.com/zhangningle/imgs/raw/master/blog/Node/mongo-2.png" alt="mongo-2"></p><p><strong>非关系型数据库使用方面：</strong></p><ol><li>数据模型比较简单</li><li>需要灵活性更强的后台系统</li><li>对数据库性能要求比较高</li><li>不需要高度的数据一致性</li></ol><p><strong>非关系型数据库主要适合小微型架构的使用</strong></p><h2 id="数据库-mongodb-安装" tabindex="-1"><a class="header-anchor" href="#数据库-mongodb-安装" aria-hidden="true">#</a> 数据库 MongoDB 安装</h2><p>MongoDB（非关系型数据库）：</p><ol><li>适合快速开发 web 应用而设计的数据库系统</li><li>设计目标是极简、灵活、经常在 web 应用栈的业务层被运用</li><li>它的数据模型是面向文档的，类似于 json 的结构</li><li>所以这个数据库中是各种各样的 json, 并以键值形式对存储</li></ol><p>安装： 下载:https://www.mongodb.com/ 偶数是稳定版，奇数是开发版 最好下载 64 位的系统版本的</p><p><strong>配置环境变量:</strong></p><ol><li>新建---&gt;安装到 bin 路径复制到环境变量</li><li>创建 data-&gt;db 文件夹</li><li>打开命令行输入 mongod 启动 DB 服务器</li><li>指定端口号和路径 mongod --dbpath d:\\data\\db</li><li>将 MongDB 设置为系统服务，data\\log 创建配置文件在 bin 下穿件文件 mongod.cfg 执行一段命令：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sc.exe create MongoDB binPath= &quot;\\&quot;F:\\MongoDB\\Server\\3.2\\bin\\mongod.exe\\&quot; --service --config= \\&quot;F:\\MongoDB\\Server\\3.2\\mongod.cfg\\&quot;&quot; DisplayName= &quot;MongoDB&quot; start= &quot;auto&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>主要是让 MongoDB 一直运行在内存中 参考资料： https://www.cnblogs.com/wzlblog/p/6364045.html https://www.cnblogs.com/chenlq/p/6515876.html</p><h2 id="在命令行中使用-mongodb-插入命令" tabindex="-1"><a class="header-anchor" href="#在命令行中使用-mongodb-插入命令" aria-hidden="true">#</a> 在命令行中使用 MongoDB 插入命令</h2><p><strong>MongoDB 的组成：</strong></p><ul><li>数据库 数据库是一个仓库 在仓库里可以放集合</li><li>集合： 集合类似数组 在集合里可以放文档</li><li>文档：文档是数据库中最小的单位 我们储存和操作的内容都是文档。</li></ul><p><strong>基本指令：</strong><code>show dbs</code> 显示当前所有的数据库 <code>use</code> 数据库名 进入到指定数据库 <code>db</code> 显示当前所在的数据库 <code>show collections</code> 显示数据库中的所有集合</p><p>使用管理员打开 cmd 输入 <code>mongo</code>进入 MongoDB 的环境 进入 MongoDB 的环境才能执行 MongoDB 的命令 然后使用命令行进行 CRUD(增删改查)： <code>db.&lt;collection&gt;.insert(doc)</code></p><p><strong>举例子：</strong> 想 school 数据库中的学生集合 student 中插入一个新的学生对象 增加一条数据： <code>db.student.insert({id:&quot;001&quot;,name:&quot;znl&quot;,age:18,sex:“男”})</code> 在当前的集合（school）中新建一条数据</p><p>查询一条数据： <code>db.&lt;collection&gt;.find();</code></p><p>如：<code>db.student.find();</code> 回车 就能查询 student 下的所有数据 插入多条数据：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>sex<span class="token operator">:</span><span class="token string">&quot;man&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>sex<span class="token operator">:</span><span class="token string">&quot;man&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>sex<span class="token operator">:</span><span class="token string">&quot;man&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>id<span class="token operator">:</span><span class="token number">18</span>，name<span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>age<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>sex<span class="token operator">:</span><span class="token string">&quot;man&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>插入多条数据时把多条语句放在一个数组里 插入可随便插入 不必拘泥于字段是否相同 当插入的字段不存在时会自动创建该字段</p></blockquote><p>查看更多更多操作：http://www.mongodb.org.cn/manual/</p><h2 id="mongodb-可视化工具-【nosql】" tabindex="-1"><a class="header-anchor" href="#mongodb-可视化工具-【nosql】" aria-hidden="true">#</a> MongoDB 可视化工具 【NOSQL】</h2><p>然而一直使用命令行操作是很麻烦的事情，所以推荐使用 NOSQL 可视化工具 安装可视化工具下载地址：https://www.mongodbmanager.com/download</p><h2 id="使用可视化工具" tabindex="-1"><a class="header-anchor" href="#使用可视化工具" aria-hidden="true">#</a> 使用可视化工具</h2><p>可视化工具 查找功能： 插入(insert)语句：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span><span class="token function">student</span><span class="token punctuation">(</span>集合名字<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&quot;znl&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&quot;znl&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>查询语句： <code>db.student(集合name).find();</code></p><p>设定条件查询： <code>db.student.find({ &quot;_id&quot; : ObjectId(&quot;5bd01c825f0d528d36a2c06f&quot;)});</code> 查询 id 对应的数据 <code>db.student.find({age:18,name:&quot;张三&quot;});</code> 查询所有的 age 是 18 并且 name 是张三的人 <code>db.student.findOne({age:18,name:&quot;张三&quot;});</code> 查询单条符合条件的数据</p><p>操作符-查询有多少条数据： <code>db.student.find().count();</code> 或 <code>db.student.find().length();</code> 返回数据总条数</p><p>查询符合条件数据的条数： <code>db.student.find({name:&quot;张三&quot;}).length();</code> 返回符合 name:&quot;张三&quot;的条数</p><h2 id="数据库更新命令" tabindex="-1"><a class="header-anchor" href="#数据库更新命令" aria-hidden="true">#</a> 数据库更新命令</h2><p>更新原有的字段的数据：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>student<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    $set<span class="token operator">:</span> <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;刘五&quot;</span><span class="token punctuation">,</span>\n      age<span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>把匹配到的<code>name:&quot;张三&quot;</code>的数据都更新成 <code>name:&quot;刘五&quot;, age:45</code> 也可以新增没有的字段 直接写入就可以 <strong>$set ：有这个字段就修改 没有这个字段就新增</strong></p><p>删除一个字段：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>student<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">}</span>，<span class="token punctuation">{</span>$unset<span class="token operator">:</span><span class="token punctuation">{</span>\n    age<span class="token operator">:</span><span class="token number">1</span>\n<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>查询<code>name:张三</code>的一条数据 然后删除它的 age 字段</p><p>修改多条：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>student<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span> sex<span class="token operator">:</span> <span class="token string">&quot;man&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    $set<span class="token operator">:</span> <span class="token punctuation">{</span>\n      aihao<span class="token operator">:</span> <span class="token string">&quot;玩游戏&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>把符合<code>sex:man</code>的语句都新增（修改）一条<code>aihao:&quot;玩游戏&quot;</code><strong>$set ：有则修改 无则新增</strong></p><p>更新多条数据方法 2：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>student<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    $set<span class="token operator">:</span> <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    multi<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>参考文档：https://docs.mongodb.com/manual/tutorial/query-documents/</p>',56),o={render:function(n,s){return t}}}}]);