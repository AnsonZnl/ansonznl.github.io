"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8989],{1797:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-2a3638b1",path:"/articles/Browser/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%BC%93%E5%AD%98%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"如何在浏览器中缓存一张图片",slug:"如何在浏览器中缓存一张图片",children:[]}],filePathRelative:"articles/Browser/如何在浏览器中缓存一张图片.md",git:{}}},1201:(n,a,s)=>{s.r(a),s.d(a,{default:()=>p});const e=(0,s(6252).uE)('<h2 id="如何在浏览器中缓存一张图片" tabindex="-1"><a class="header-anchor" href="#如何在浏览器中缓存一张图片" aria-hidden="true">#</a> 如何在浏览器中缓存一张图片</h2><p>要使用 JavaScript 缓存一张图片，你可以使用<code>Image</code>对象的<code>src</code>属性来加载图片，并将其存储在浏览器的缓存中。</p><p>以下是一个示例的 JavaScript 代码，演示如何缓存一张图片：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nimage<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&quot;path/to/image.jpg&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 当图片加载完成后，它将被缓存</span>\nimage<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;图片已被缓存&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>在上面的代码中，我们创建了一个<code>Image</code>对象，并将图片的路径指定为<code>src</code>属性的值。当图片加载完成后，<code>onload</code>事件将被触发，我们可以在事件处理程序中执行任何需要的操作。</p><p>通过将图片的路径赋值给<code>src</code>属性，浏览器将自动加载并缓存图片。当需要使用这张图片时，可以直接从缓存中获取，而不需要再次从服务器下载。</p><p>请确保将<code>&#39;path/to/image.jpg&#39;</code>替换为实际图片的路径。你可以在需要缓存图片的地方使用上述代码。</p>',7),p={render:function(n,a){return e}}}}]);