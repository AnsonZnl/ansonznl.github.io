"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4236],{8065:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-869f29dc",path:"/computer-base/LeetCode/%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"循环链表",slug:"循环链表",children:[]},{level:2,title:"思路",slug:"思路",children:[]}],filePathRelative:"computer-base/LeetCode/环形链表.md",git:{}}},1725:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h2 id="循环链表" tabindex="-1"><a class="header-anchor" href="#循环链表" aria-hidden="true">#</a> 循环链表</h2><p>给定一个链表，判断链表中是否有环。</p><p>如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是 -1，则在该链表中没有环。注意：pos 不作为参数进行传递，仅仅是为了标识链表的实际情况。</p><p>如果链表中存在环，则返回 true 。 否则，返回 false 。</p><p>链接：https://leetcode-cn.com/problems/linked-list-cycle</p><h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isCicle</span><span class="token punctuation">(</span><span class="token parameter">link</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">let</span> val <span class="token operator">=</span> link<span class="token punctuation">.</span>val<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> next <span class="token operator">=</span> link<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',7),t={render:function(n,s){return e}}}}]);