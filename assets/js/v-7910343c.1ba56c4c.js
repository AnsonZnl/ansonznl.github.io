"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2501],{3523:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-7910343c",path:"/articles/Node/koa%E7%B3%BB%E5%88%97%EF%BC%882%EF%BC%89-koa2%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0.html",title:"koa2 原生路由实现",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"简单例子",slug:"简单例子",children:[]},{level:2,title:"定制化的路由",slug:"定制化的路由",children:[{level:3,title:"源码文件目录",slug:"源码文件目录",children:[]},{level:3,title:"demo源码",slug:"demo源码",children:[]},{level:3,title:"运行demo",slug:"运行demo",children:[]}]}],filePathRelative:"articles/Node/koa系列（2）-koa2路由实现.md",git:{}}},8937:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var p=a(6252);const e=(0,p.uE)('<h1 id="koa2-原生路由实现" tabindex="-1"><a class="header-anchor" href="#koa2-原生路由实现" aria-hidden="true">#</a> koa2 原生路由实现</h1><h2 id="简单例子" tabindex="-1"><a class="header-anchor" href="#简单例子" aria-hidden="true">#</a> 简单例子</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span> <span class="token keyword">async</span> <span class="token punctuation">(</span> <span class="token parameter">ctx</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> url <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>url\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> url\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>访问 http://localhost:3000/hello/world 页面会输出 /hello/world，也就是说上下文的请求request对象中url之就是当前访问的路径名称，可以根据ctx.request.url 通过一定的判断或者正则匹配就可以定制出所需要的路由。</p><h2 id="定制化的路由" tabindex="-1"><a class="header-anchor" href="#定制化的路由" aria-hidden="true">#</a> 定制化的路由</h2><p>demo源码</p>',6),t={href:"https://github.com/ChenShenhai/koa2-note/tree/master/demo/route-simple",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("https://github.com/ChenShenhai/koa2-note/tree/master/demo/route-simple"),l=(0,p.uE)('<h3 id="源码文件目录" tabindex="-1"><a class="header-anchor" href="#源码文件目录" aria-hidden="true">#</a> 源码文件目录</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>.\n├── index.js\n├── package.json\n└── view\n    ├── 404.html\n    ├── index.html\n    └── todo.html\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="demo源码" tabindex="-1"><a class="header-anchor" href="#demo源码" aria-hidden="true">#</a> demo源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 用Promise封装异步读取文件方法</span>\n<span class="token comment">// @param  {string} page html文件名称</span>\n<span class="token comment">// @return {promise}      </span>\n\n<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span> <span class="token parameter">page</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span> <span class="token parameter">resolve<span class="token punctuation">,</span> reject</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> viewUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./view/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>page<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>viewUrl<span class="token punctuation">,</span> <span class="token string">&quot;binary&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span> <span class="token parameter">err<span class="token punctuation">,</span> data</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span> err <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span> err <span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span> data <span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n * 根据URL获取HTML内容\n * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">url</span> koa2上下文的url，ctx.url\n * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>     获取HTML文件内容\n */</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">route</span><span class="token punctuation">(</span> <span class="token parameter">url</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> view <span class="token operator">=</span> <span class="token string">&#39;404.html&#39;</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span> url <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">&#39;/&#39;</span><span class="token operator">:</span>\n      view <span class="token operator">=</span> <span class="token string">&#39;index.html&#39;</span>\n      <span class="token keyword">break</span>\n    <span class="token keyword">case</span> <span class="token string">&#39;/index&#39;</span><span class="token operator">:</span>\n      view <span class="token operator">=</span> <span class="token string">&#39;index.html&#39;</span>\n      <span class="token keyword">break</span>\n    <span class="token keyword">case</span> <span class="token string">&#39;/todo&#39;</span><span class="token operator">:</span>\n      view <span class="token operator">=</span> <span class="token string">&#39;todo.html&#39;</span>\n      <span class="token keyword">break</span>\n    <span class="token keyword">case</span> <span class="token string">&#39;/404&#39;</span><span class="token operator">:</span>\n      view <span class="token operator">=</span> <span class="token string">&#39;404.html&#39;</span>\n      <span class="token keyword">break</span>\n    <span class="token keyword">default</span><span class="token operator">:</span>\n      <span class="token keyword">break</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">render</span><span class="token punctuation">(</span> view <span class="token punctuation">)</span>\n  <span class="token keyword">return</span> html\n<span class="token punctuation">}</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span> <span class="token keyword">async</span> <span class="token punctuation">(</span> <span class="token parameter">ctx</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> url <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>url\n  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">route</span><span class="token punctuation">(</span> url <span class="token punctuation">)</span>\n  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> html\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;[demo] route-simple is starting at port 3000&#39;</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><h3 id="运行demo" tabindex="-1"><a class="header-anchor" href="#运行demo" aria-hidden="true">#</a> 运行demo</h3><h4 id="执行运行脚本" tabindex="-1"><a class="header-anchor" href="#执行运行脚本" aria-hidden="true">#</a> 执行运行脚本</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>node -harmony index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="运行效果如下" tabindex="-1"><a class="header-anchor" href="#运行效果如下" aria-hidden="true">#</a> 运行效果如下</h4>',8),c=(0,p.Uk)("访问"),r={href:"http://localhost:3000/index",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("http://localhost:3000/index"),i={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[e,(0,p._)("p",null,[(0,p._)("a",t,[o,(0,p.Wm)(a)])]),l,(0,p._)("p",null,[c,(0,p._)("a",r,[u,(0,p.Wm)(a)])])],64)}}}}]);