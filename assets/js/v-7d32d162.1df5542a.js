"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3641],{2969:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-7d32d162",path:"/articles/WeApp/%E4%BB%8E%E5%89%8D%E7%AB%AF%E7%9A%84%E8%A7%92%E5%BA%A6%E6%9D%A5%E6%A2%B3%E7%90%86%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%EF%BC%88%E5%B0%8F%E7%A8%8B%E5%BA%8F%E3%80%81H5%E3%80%81JSAPI%EF%BC%89%E7%9A%84%E6%B5%81%E7%A8%8B.html",title:"从前端的角度来梳理微信支付（小程序、H5、JSAPI）的流程",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"小程序支付",slug:"小程序支付",children:[{level:3,title:"开发流程",slug:"开发流程",children:[]},{level:3,title:"伪代码",slug:"伪代码",children:[]},{level:3,title:"注意事项",slug:"注意事项",children:[]},{level:3,title:"参考",slug:"参考",children:[]}]},{level:2,title:"H5 支付",slug:"h5-支付",children:[{level:3,title:"开发流程",slug:"开发流程-1",children:[]},{level:3,title:"伪代码",slug:"伪代码-1",children:[]},{level:3,title:"注意事项",slug:"注意事项-1",children:[]},{level:3,title:"参考",slug:"参考-1",children:[]}]},{level:2,title:"JSAPI 支付（微信内网页支付）",slug:"jsapi-支付-微信内网页支付",children:[{level:3,title:"开发流程",slug:"开发流程-2",children:[]},{level:3,title:"伪代码",slug:"伪代码-2",children:[]},{level:3,title:"同时支持 H5 支付和 JSAPI 支付",slug:"同时支持-h5-支付和-jsapi-支付",children:[]},{level:3,title:"注意事项",slug:"注意事项-2",children:[]},{level:3,title:"参考",slug:"参考-2",children:[]}]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"articles/WeApp/从前端的角度来梳理微信支付（小程序、H5、JSAPI）的流程.md",git:{}}},4724:(n,s,a)=>{a.r(s),a.d(s,{default:()=>jn});var p=a(6252);const t=(0,p.uE)('<h1 id="从前端的角度来梳理微信支付-小程序、h5、jsapi-的流程" tabindex="-1"><a class="header-anchor" href="#从前端的角度来梳理微信支付-小程序、h5、jsapi-的流程" aria-hidden="true">#</a> 从前端的角度来梳理微信支付（小程序、H5、JSAPI）的流程</h1><p>因业务需要，开发微信支付功能，涉及三种支付方式：</p><ul><li>JSAPI 支付：微信内网页支付，需要开通微信服务号</li><li>小程序支付：在小程序中支付，需要开通小程序</li><li>H5 支付：在手机浏览器（出微信内网爷）中网页支付</li></ul><p>使用微信支付的前提必开通微信商户号，要使用到那种的支付方式要前需在商户平台开通（要审核）。</p><p>支付的钱最终都会到商户号里（一般由公司财务开通）。</p><p>开发微信支付的过程中大大小小坑还是踩了不少，终于做完了，整理下开发流程。</p><p>参考：</p>',7),e={href:"https://pay.weixin.qq.com/static/applyment_guide/applyment_index.shtml",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("微信支付-接入指引"),c={href:"https://pay.weixin.qq.com/wiki/doc/api/index.html",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("微信支付-开发文档"),u=(0,p._)("h2",{id:"小程序支付",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#小程序支付","aria-hidden":"true"},"#"),(0,p.Uk)(" 小程序支付")],-1),i=(0,p._)("h3",{id:"开发流程",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#开发流程","aria-hidden":"true"},"#"),(0,p.Uk)(" 开发流程")],-1),r=(0,p._)("li",null,[(0,p.Uk)("小程序端请求创建订单接口，后端统一下单获取 "),(0,p._)("code",null,"orderId"),(0,p.Uk)(" 并返回")],-1),k=(0,p.Uk)("小程序端获取通过"),d={href:"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html",target:"_blank",rel:"noopener noreferrer"},m=(0,p.Uk)("wx.login()"),b=(0,p.Uk)("获取"),h=(0,p._)("code",null,"code",-1),g=(0,p._)("li",null,[(0,p.Uk)("小程序端拿这"),(0,p._)("code",null,"code"),(0,p.Uk)("和"),(0,p._)("code",null,"orderId"),(0,p.Uk)("请求后端接口，获取支付所需数据")],-1),w=(0,p.Uk)("获取支付所需数据之后，小程序端调用"),_={href:"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/payment/wx.requestPayment.html",target:"_blank",rel:"noopener noreferrer"},f=(0,p.Uk)("wx.requestPayment()"),x=(0,p.Uk)("接口，直接调用起支付页面"),y=(0,p._)("li",null,"判断是否支付成功后的逻辑",-1),q=(0,p.uE)('<h3 id="伪代码" tabindex="-1"><a class="header-anchor" href="#伪代码" aria-hidden="true">#</a> 伪代码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">wxPay</span><span class="token punctuation">(</span><span class="token parameter">goodId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 1. 创建订单 获取orderId</span>\n  <span class="token keyword">let</span> orderId <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/CreateTheOrder&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    goodId<span class="token punctuation">,</span> <span class="token comment">// 商品id</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 2. 获得 code</span>\n  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">wxlogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 基于pr封装的wx.login()方法</span>\n  <span class="token comment">// 3. 获取支付的数据</span>\n  <span class="token keyword">let</span> payData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/WxXcxPay&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    orderId<span class="token punctuation">,</span>\n    code<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 4. 发起支付</span>\n  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">payment</span><span class="token punctuation">(</span>payData<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 基于pr封装的wx.requestPayment()方法</span>\n  <span class="token comment">// 5. 判断是否支付成功</span>\n  <span class="token keyword">let</span> payResult <span class="token operator">=</span> res<span class="token punctuation">.</span>errMsg<span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>payResult <span class="token operator">==</span> <span class="token string">&quot;requestPayment:ok&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;支付成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>payResult <span class="token operator">==</span> <span class="token string">&quot;requestPayment:fail cancel&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;用户取消支付&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;支付失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h3><ol><li>申请微信小程序账号 申请成功可拿到 AppID（小程序 id）和 AppSecret（小程序密钥） 申请类型为企业性质，否则无法接入微信支付</li><li>微信小程序认证 通过认证的小程序才能接入微信支付和绑定商户平台</li><li>申请商户平台账号 需要第一步申请的 AppID 申请成功可拿到 MchID（商户 id）和 MchKey（商户密钥）</li><li>信小程序关联商户号 微信和商户都认证成功后，在微信后台微信支付菜单中进行关联</li><li>接入微信支付 在微信后台微信支付菜单中进行接入</li></ol><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h3>',5),v={href:"https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_3&index=1",target:"_blank",rel:"noopener noreferrer"},P=(0,p.Uk)("小程序支付文档"),A={href:"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/payment/wx.requestPayment.html",target:"_blank",rel:"noopener noreferrer"},U=(0,p.Uk)("小程序开发文档"),I=(0,p.uE)('<h2 id="h5-支付" tabindex="-1"><a class="header-anchor" href="#h5-支付" aria-hidden="true">#</a> H5 支付</h2><h3 id="开发流程-1" tabindex="-1"><a class="header-anchor" href="#开发流程-1" aria-hidden="true">#</a> 开发流程</h3><ol><li>前端端请求创建订单接口，后端统一下单获取 <code>orderId</code> 并返回</li><li>前端带着 <code>orderId</code> 请求支付接口，获得 <code>mweb_url</code>，</li><li>然后跳转 <code>mweb_url</code> 会跳转微信自动调用微信支付</li><li>支付后返回支付页，判断是否支付成功（需发送请求后端查询） 4.1 刷新页面，获取最新的支付（订单）状态。 4.2 设置一个的按钮&quot;我已支付&quot;，让用户点击自动查询状态。</li></ol><h3 id="伪代码-1" tabindex="-1"><a class="header-anchor" href="#伪代码-1" aria-hidden="true">#</a> 伪代码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">wxH5Pay</span><span class="token punctuation">(</span><span class="token parameter">goodId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 1. 创建订单 获取orderId</span>\n  <span class="token keyword">let</span> orderId <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/CreateTheOrder&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    goodId<span class="token punctuation">,</span> <span class="token comment">// 商品id</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 2. 获取支付跳转的URL</span>\n  <span class="token keyword">let</span> mweb_url <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/WxH5Pay&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> orderId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 3. 跳转URL去微信支付</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>mweb_url<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    location<span class="token punctuation">.</span>href <span class="token operator">=</span> mweb_url<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;回调地址出错&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 4. 支付后返回支付页，判断是否支付成功</span>\n  <span class="token comment">// 4.1 刷新页面，获取最新的订单(商品)状态。</span>\n  <span class="token comment">// 4.2 设置一个&quot;我已支付&quot;的按钮，让用户点击之后查询状态。</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="注意事项-1" tabindex="-1"><a class="header-anchor" href="#注意事项-1" aria-hidden="true">#</a> 注意事项</h3><ul><li>在商户平台设置正确的支付域名</li><li>调试需要在线上，如果嫌麻烦可以使用内网穿透（Ngrok 或花生壳）</li><li>需对<code>redirect_url</code>进行<code>urlencode</code>处理</li><li>H5 支付不能直接在微信客户端内调起，请在外部浏览器调起。</li></ul><h3 id="参考-1" tabindex="-1"><a class="header-anchor" href="#参考-1" aria-hidden="true">#</a> 参考</h3>',8),j={href:"https://pay.weixin.qq.com/wiki/doc/api/H5.php?chapter=15_4",target:"_blank",rel:"noopener noreferrer"},W=(0,p.Uk)("微信支付-H5 支付-开发步骤"),S=(0,p.uE)('<h2 id="jsapi-支付-微信内网页支付" tabindex="-1"><a class="header-anchor" href="#jsapi-支付-微信内网页支付" aria-hidden="true">#</a> JSAPI 支付（微信内网页支付）</h2><h3 id="开发流程-2" tabindex="-1"><a class="header-anchor" href="#开发流程-2" aria-hidden="true">#</a> 开发流程</h3><ul><li>商品页</li></ul><ol><li>前端商品页创建订单，在后端统一下单后获取 <code>orderId</code></li><li>前端带着 <code>orderId</code> 跳转到支付页，</li></ol><ul><li>支付页</li></ul><ol><li>获取 <code>code</code><ol><li>第一次进入页面，判断是否路径中有 <code>code</code></li><li>没有 <code>code</code>，请求数据跳转授权页面，<code>code</code> 会通过回调地址一起返回回来</li><li>拿到 <code>code</code>，发送给后端，后端解析到 <code>openid</code>，保存好。</li></ol></li><li>点击确定支付按钮，触发 <code>wxPay()</code> 方法 <ol><li>发送 <code>orderId</code> 给后端，获取 <code>wxData</code></li><li><code>wxData</code> 中包含 <code>wx.config</code> 和 <code>wx.chooseWXPay</code> 两个接口的数据。</li><li>先调用 <code>wx.config()</code>然后在调用 <code>wx.chooseWXPay()</code>，如果一切正常，支付页面就会弹出。</li></ol></li><li>支付状态通过后端去查询</li></ol><h3 id="伪代码-2" tabindex="-1"><a class="header-anchor" href="#伪代码-2" aria-hidden="true">#</a> 伪代码</h3><ul><li>商品页</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. 创建订单 获取orderId</span>\n<span class="token keyword">let</span> orderId <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/CreateTheOrder&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  goodId<span class="token punctuation">,</span> <span class="token comment">// 商品id</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 2. 携带id 跳转到支付页</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;wx_pay_page&quot;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token punctuation">{</span> orderId<span class="token operator">:</span> id <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>入口文件(<code>main.js</code>)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// main.js 引入 js-sdk</span>\n<span class="token keyword">import</span> wx <span class="token keyword">from</span> <span class="token string">&quot;weixin-js-sdk&quot;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><strong>支付页 HTML</strong></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wxPay<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击支付<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>支付页 JS</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Vue</span>\n<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        orderId<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>orderId<span class="token punctuation">,</span> <span class="token comment">// 订单id</span>\n        url<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">// 获取code的url</span>\n        wxData<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span><span class="token comment">// js-sdk接口所需的数据</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// 判断是否有code</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nmethods<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> code <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUrlPram</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>\n            <span class="token comment">// 拿到 code 发给 后端</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 去拿code</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 请求后端拿到url所需数据，然后跳转页面在通过回调地址返回，获取code.</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>axios\n            <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/api/OrderProgram/GetOpenidAndAccessToken&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                orderId<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderId<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://open.weixin.qq.com/connect/oauth2/authorize?appid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>appId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;redirect_uri=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>redirect_uri<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;response_type=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>response_type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;scope=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>scope<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;state=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>state<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">sendCode</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 发送code给后端 后端解析出openid</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>axios\n            <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/api/OrderProgram/GetOpenidAndAccessTokenFromCode&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                code<span class="token operator">:</span> code<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">wxPay</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 发送orderid，获取wx.chooseWXPay和wx.config所需的参数</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>wxData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>\n            <span class="token string">&quot;/api/OrderProgram/WxJSAPIPay&quot;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> orderId<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderId <span class="token punctuation">}</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> wxConfigData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>wxData<span class="token punctuation">.</span>wxConfigData <span class="token comment">// 获取wx.chooseWXPay()所需数据</span>\n        <span class="token keyword">let</span> wxPayData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>wxData<span class="token punctuation">.</span>wxPayData<span class="token punctuation">;</span><span class="token comment">// 获取wx.config()所需数据</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>$wx<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            debug<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>\n            appId<span class="token operator">:</span> wxConfigData<span class="token punctuation">.</span>appId<span class="token punctuation">,</span> <span class="token comment">// 必填，公众号的唯一标识</span>\n            timestamp<span class="token operator">:</span> wxConfigData<span class="token punctuation">.</span>timeStamp<span class="token punctuation">,</span> <span class="token comment">// 必填，生成签名的时间戳</span>\n            nonceStr<span class="token operator">:</span> wxConfigData<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment">// 必填，生成签名的随机串</span>\n            signature<span class="token operator">:</span> wxConfigData<span class="token punctuation">.</span>paySign<span class="token punctuation">,</span> <span class="token comment">// 必填，签名</span>\n            jsApiList<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token string">&quot;chooseWXPay&quot;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 执行支付</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>$wx<span class="token punctuation">.</span><span class="token function">chooseWXPay</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            timestamp<span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>timeStamp<span class="token punctuation">,</span> <span class="token comment">// 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符</span>\n            nonceStr<span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment">// 支付签名随机串，不长于 32 位</span>\n            <span class="token keyword">package</span><span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>package<span class="token punctuation">,</span> <span class="token comment">// 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=\\*\\*\\*）</span>\n            signType<span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>signType<span class="token punctuation">,</span> <span class="token comment">// 签名方式，默认为&#39;SHA1&#39;，使用新版支付需传入&#39;MD5&#39;</span>\n            paySign<span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>paySign<span class="token punctuation">,</span> <span class="token comment">// 支付签名</span>\n            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$toast</span><span class="token punctuation">(</span><span class="token string">&quot;支付成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$toast</span><span class="token punctuation">(</span><span class="token string">&quot;支付失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><h3 id="同时支持-h5-支付和-jsapi-支付" tabindex="-1"><a class="header-anchor" href="#同时支持-h5-支付和-jsapi-支付" aria-hidden="true">#</a> 同时支持 H5 支付和 JSAPI 支付</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 在创建订单之后，就判断环境使用哪种方法支付。</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isWx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">WXPay</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 带着orderId跳转到支付页逻辑</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">H5Pay</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行上面H5支付中的创建订单之后的逻辑</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 判断是否是微信浏览器</span>\n<span class="token keyword">function</span> <span class="token function">isWx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> uAgent <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">reutrn</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">micromessenger</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>uAgent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="注意事项-2" tabindex="-1"><a class="header-anchor" href="#注意事项-2" aria-hidden="true">#</a> 注意事项</h3>',18),D=(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("开通微信商户号 - 设置支付目录（如果是 Vue 这类 SPA 页面，到根目录即可，也就是#号之前的地址） "),(0,p._)("img",{src:"https://i.loli.net/2020/11/19/4XFPVlYrHLk8g7p.png",alt:"wxpay1.png"})])],-1),E=(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("开通微信公众号（服务号） - 设置安全域名、设置授权域名 "),(0,p._)("img",{src:"https://i.loli.net/2020/11/19/m5IhT3RfBQkg9MY.png",alt:"wxpay8.png"})])],-1),O=(0,p._)("li",null,[(0,p._)("p",null,"收集参数：appId 和 AppSecret")],-1),H=(0,p.Uk)("添加 Web 开发工具开发者（需要开发者同时开发者关注开发的微信公众号和微信公众账号安全助手）"),C={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Web_Developer_Tools.html",target:"_blank",rel:"noopener noreferrer"},T=(0,p.Uk)("参考文档"),B=(0,p._)("img",{src:"https://i.loli.net/2020/11/19/zTOxPq7QD9sgjhr.png",alt:"wxpay3.png"},null,-1),J=(0,p.Uk)("设置回调域名（例如："),$=(0,p._)("code",null,"www.xx.com/pay",-1),F=(0,p.Uk)("，最后获取的 code 会拼在此回调地址后返回，返回后如"),X=(0,p._)("code",null,"www.xx.com/pay?code=xxxx",-1),L=(0,p.Uk)("）"),M={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html",target:"_blank",rel:"noopener noreferrer"},R=(0,p.Uk)("参考 1"),z=(0,p._)("img",{src:"https://i.loli.net/2020/11/19/H8lFo4hEIwMU3ku.png",alt:"wxpay5.png"},null,-1),K=(0,p._)("p",null,"获取 code",-1),G=(0,p.Uk)("参考"),Q={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html",target:"_blank",rel:"noopener noreferrer"},Y=(0,p.Uk)("获取 code 文档"),V=(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("在微信客户端网页打开授权地址，跳转之后，在返回的回调地址之后拿到 "),(0,p._)("code",null,"code"),(0,p.Uk)("：")])],-1),N=(0,p.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>https://open.weixin.qq.com/connect/oauth2/authorize\n?appid=你的appid\n&amp;redirect_uri=你的回调地址（拿到code后返回）\n&amp;response_type=code（返回类型，默认code）\n&amp;scope=snsapi_base（授权范围，静默授权拿到openid）\n&amp;state=STATE(自定义状态，非必填)\n#wechat_redirect（重定向使用必须携带）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>redirect_uri</code>参数要和你在微信公众号里设置的回调域名一致（例如：<code>www.xx.com/pay</code>）,需要注意的是这 url 需要<code>urlEncode</code>。</p><p>请求这个地址之后，<code>code</code> 会以你设置的<code>redirect_uri</code>地址里的参数带回来，拿到之后传给后端就行了。</p>',3),Z=(0,p._)("p",null,"前端引入 js-skd",-1),nn=(0,p.Uk)("使用"),sn=(0,p._)("code",null,"script",-1),an=(0,p.Uk)("引入"),pn={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html",target:"_blank",rel:"noopener noreferrer"},tn=(0,p.Uk)("js-sdk"),en=(0,p.Uk)("下载使用 "),on=(0,p._)("code",null,"npm",-1),cn=(0,p.Uk)(" 包"),ln={href:"https://www.npmjs.com/package/weixin-js-sdk",target:"_blank",rel:"noopener noreferrer"},un=(0,p.Uk)("weixin-js-sdk"),rn=(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("获取 "),(0,p._)("code",null,"wx.config"),(0,p.Uk)(" 的参数 "),(0,p._)("img",{src:"https://i.loli.net/2020/11/19/3cnG8dCalupfT7A.png",alt:"wxpay6.png"})])],-1),kn=(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("获取 "),(0,p._)("code",null,"wx.chooseWXPay"),(0,p.Uk)(" 所需的参数 "),(0,p._)("img",{src:"https://i.loli.net/2020/11/19/CcrgNvwx8lbjq7B.png",alt:"wxpay7.png"})])],-1),dn=(0,p._)("h3",{id:"参考-2",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#参考-2","aria-hidden":"true"},"#"),(0,p.Uk)(" 参考")],-1),mn={href:"https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_1",target:"_blank",rel:"noopener noreferrer"},bn=(0,p.Uk)("微信支付-JSAPI"),hn={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html",target:"_blank",rel:"noopener noreferrer"},gn=(0,p.Uk)("微信公众号-网页授权"),wn={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html",target:"_blank",rel:"noopener noreferrer"},_n=(0,p.Uk)("JS-SDK 开发文档"),fn={href:"https://blog.csdn.net/weixin_40814356/article/details/103948635",target:"_blank",rel:"noopener noreferrer"},xn=(0,p.Uk)("小程序、H5 登录授权、分享、支付流程"),yn={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#62",target:"_blank",rel:"noopener noreferrer"},qn=(0,p.Uk)("wx.config 接口注入时"),vn=(0,p._)("code",null,"signature",-1),Pn=(0,p.Uk)("参数需要注意，坑比较多"),An={href:"https://shimo.im/docs/QHHQ6Cr66Wtx8g9Y",target:"_blank",rel:"noopener noreferrer"},Un=(0,p.Uk)("我的 JS-SDK 使用总结"),In=(0,p.uE)('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>整个流程走下来，给我的体验是：小程序支付最方便（因为配置少），其次是 H5，JSAPI 支付最麻烦（文章一多半都在写它）</p><p>在微信支付功能开发过程中，其实最麻烦的不是开发流程，而是他的各种配置和授权流程，为了拿到所需的参数而来回折腾。</p><p>开发过程中的一些参数是经常用到的，如 appid、openid、orderId</p><p>支付流程大径相同，先获取到用户的 openid，知道你是谁，然后统一下单拿到 orderId 再去处理不同平台的支付方式</p><p>开发时候用到的相关文档，一定要<strong>仔细</strong>阅读二遍以上为止！！</p><p>遇到问题不要死刚，多百度多 Google，说不准你遇到的问题已经有无数的人遇到过并且已经有成熟的解决方案了。</p><p>前端和后端要多沟通，有什么问题(难点)随时反馈，需要什么参数好好说，遇到观点不一致的时候千万要注意控制住情绪，切莫撕逼（.——.）。</p><p>因为本人水平有限，对后端流程懂得不多，只能以前端的角度来梳理整个支付流程。</p><p>以上，希望对你有所帮助。</p>',10),jn={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("a",e,[o,(0,p.Wm)(a)])]),(0,p._)("li",null,[(0,p._)("a",c,[l,(0,p.Wm)(a)])])]),u,i,(0,p._)("ol",null,[r,(0,p._)("li",null,[k,(0,p._)("a",d,[m,(0,p.Wm)(a)]),b,h]),g,(0,p._)("li",null,[w,(0,p._)("a",_,[f,(0,p.Wm)(a)]),x]),y]),q,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("a",v,[P,(0,p.Wm)(a)])]),(0,p._)("li",null,[(0,p._)("a",A,[U,(0,p.Wm)(a)])])]),I,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("a",j,[W,(0,p.Wm)(a)])])]),S,(0,p._)("ul",null,[D,E,O,(0,p._)("li",null,[(0,p._)("p",null,[H,(0,p._)("a",C,[T,(0,p.Wm)(a)]),B])])]),(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,[J,$,F,X,L,(0,p._)("a",M,[R,(0,p.Wm)(a)]),z])]),(0,p._)("li",null,[K,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,[G,(0,p._)("a",Q,[Y,(0,p.Wm)(a)])])]),V])])]),N,(0,p._)("ul",null,[(0,p._)("li",null,[Z,(0,p._)("ul",null,[(0,p._)("li",null,[nn,sn,an,(0,p._)("a",pn,[tn,(0,p.Wm)(a)])]),(0,p._)("li",null,[en,on,cn,(0,p._)("a",ln,[un,(0,p.Wm)(a)])])])]),rn,kn]),dn,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("a",mn,[bn,(0,p.Wm)(a)])]),(0,p._)("li",null,[(0,p._)("a",hn,[gn,(0,p.Wm)(a)])]),(0,p._)("li",null,[(0,p._)("a",wn,[_n,(0,p.Wm)(a)])]),(0,p._)("li",null,[(0,p._)("a",fn,[xn,(0,p.Wm)(a)])]),(0,p._)("li",null,[(0,p._)("a",yn,[qn,vn,Pn,(0,p.Wm)(a)])]),(0,p._)("li",null,[(0,p._)("a",An,[Un,(0,p.Wm)(a)])])]),In],64)}}}}]);