"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4508],{7638:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-306e2cb4",path:"/articles/WeApp/%E4%BD%BF%E7%94%A8Promise%E5%B0%81%E8%A3%85%E5%B0%8F%E7%A8%8B%E5%BA%8Fwx.request.html",title:"使用Promise封装小程序wx.request",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"封装代码",slug:"封装代码",children:[]},{level:2,title:"使用方法",slug:"使用方法",children:[]}],filePathRelative:"articles/WeApp/使用Promise封装小程序wx.request.md",git:{}}},7637:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(6252);const t=(0,p.uE)('<h1 id="使用promise封装小程序wx-request" tabindex="-1"><a class="header-anchor" href="#使用promise封装小程序wx-request" aria-hidden="true">#</a> 使用Promise封装小程序wx.request</h1><p>因为业务需要，每个http请求都要加上一个请求头，所以每次都要写很多重复的代码。</p><p>现在尝试把wx.request简单的封装了一下，调用一个request方法，每次请求自动携带header头信息，这样就省事多了，包含了常见的get post put delete 四种请求方法，支持Promise方式调用。</p><h2 id="封装代码" tabindex="-1"><a class="header-anchor" href="#封装代码" aria-hidden="true">#</a> 封装代码</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">request</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_baseUrl <span class="token operator">=</span> <span class="token string">&#39;https://xxx.com/api&#39;</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_token <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;Authorization&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Bearer &#39;</span> <span class="token operator">+</span> token<span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token doc-comment comment">/**\n   * GET类型的网络请求\n   */</span>\n  <span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_header</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">requestAll</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header<span class="token punctuation">,</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token doc-comment comment">/**\n   * DELETE类型的网络请求\n   */</span>\n  <span class="token function">deleteRequest</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_header</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">requestAll</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header<span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token doc-comment comment">/**\n   * PUT类型的网络请求\n   */</span>\n  <span class="token function">putRequest</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_header</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">requestAll</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header<span class="token punctuation">,</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token doc-comment comment">/**\n   * POST类型的网络请求\n   */</span>\n  <span class="token function">postRequest</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_header</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">requestAll</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header<span class="token punctuation">,</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token doc-comment comment">/**\n   * 网络请求\n   */</span>\n  <span class="token function">requestAll</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> header<span class="token punctuation">,</span> method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        url<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_baseUrl <span class="token operator">+</span> url<span class="token punctuation">,</span>\n        data<span class="token operator">:</span> data<span class="token punctuation">,</span>\n        header<span class="token operator">:</span> header<span class="token punctuation">,</span>\n        method<span class="token operator">:</span> method<span class="token punctuation">,</span>\n        success<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//200: 服务端业务处理正常结束</span>\n            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">//其它错误，提示用户错误信息</span>\n            <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        fail<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> request\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><p>在app.js中引入：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&#39;./request.js&#39;</span>\n<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">myRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>然后在要使用的页面里引入使用即可：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//新建页面时 默认引入</span>\n<span class="token keyword">const</span> ajax <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">myRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//初始化一个的request() 实例</span>\n\n<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  data<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  \n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    ajax<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token string">&#39;/getList&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1024</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>使用方法也是异常简单</p><ul><li>比如Get请求就是：<code>ajax.getRequest(url: String, data: Object);</code></li><li>比如Post请求就是：<code>ajax.postRequest(url: String, data: Object);</code></li><li>...</li></ul>',12),e=(0,p.Uk)("参考： "),c={href:"https://juejin.im/post/5b050e5651882542816aabfa",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("封装wx.request"),l={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[e,(0,p._)("a",c,[o,(0,p.Wm)(a)])])],64)}}}}]);